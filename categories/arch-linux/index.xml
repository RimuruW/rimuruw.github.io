<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Arch Linux on 清絮的博客</title>
        <link>https://blog.linioi.com/categories/arch-linux/</link>
        <description>Recent content in Arch Linux on 清絮的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 17 Aug 2021 23:32:39 +0800</lastBuildDate><atom:link href="https://blog.linioi.com/categories/arch-linux/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Arch Linux Clash 安装配置记录</title>
        <link>https://blog.linioi.com/posts/clash-on-arch/</link>
        <pubDate>Tue, 17 Aug 2021 23:32:39 +0800</pubDate>
        
        <guid>https://blog.linioi.com/posts/clash-on-arch/</guid>
        <description>&lt;img src="https://blog.linioi.com/posts/clash-on-arch/clash.png" alt="Featured image of post Arch Linux Clash 安装配置记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;在此之前，我使用的代理解决方案是 Qv2ray + cgproxy 透明代理。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Qv2ray/Qv2ray&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Qv2ray&lt;/a&gt; 是 Linux 下久负盛名的 GUI 代理程序，在 Linux 用户群中有极高的热度。截止目前（2021 年 8 月 17 日），Qv2ray 的 GitHub Star 为 11.9k。&lt;/p&gt;
&lt;p&gt;但是自  4 月 30 日 Qv2ray 开发组及 V2Fly 项目相关成员发生内部冲突以来，Qv2ray 的开发基本停滞。如果说此前还可以用 qv2ray-git (3.0.0) 自欺欺人的话，那么现在 Qv2ray &lt;a class=&#34;link&#34; href=&#34;https://github.com/Qv2ray/Qv2ray&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;README&lt;/a&gt; 的声明则是对这场闹剧的终结。&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Qv2ray: &lt;em&gt;2019-03-28 - 2021-08-17&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;自 4 月 30 日开发者内部出现矛盾之后的四个月中，并无活跃开发者参与维护，其他组织成员也并未有足够贡献量/能力，因此我们决定停止维护本项目，最新 Release 可见于 &lt;a class=&#34;link&#34; href=&#34;https://github.com/Qv2ray/Qv2ray/releases/tag/v2.7.0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;v2.7.0&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;感谢所有 Qv2ray 用户，项目组成员与外部贡献者，V2Fly 项目组成员及 V2Ray-Core 外部贡献者&lt;/p&gt;
&lt;p&gt;致敬&lt;/p&gt;
&lt;p&gt;gcc 写于 8 月 17 日&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为一个见证了闹剧的开始与落幕的观众，我内心的失望是不言而喻的。如果之前对开源社区还抱有极高的崇敬与憧憬的话，现在算是认清了“开发者也是通俗意义上的人”的事实。Qv2ray 事件也好，RMS 事件也罢，由人组成的团体可以如此相似和单调枯燥。&lt;/p&gt;
&lt;p&gt;属于 Qv2ray 的时代已经谢幕。可预见的是，如果 Linux 开源社区仍然像这样一滩死水的话，Linux 也到了淡出舞台的时候了，它过去所让人热爱和追捧的一切会是最后击垮它的落石。&lt;/p&gt;
&lt;h2 id=&#34;安装-clash&#34;&gt;安装 Clash&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Dreamacro/clash&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Clash&lt;/a&gt; 是一个由 Go 语言开发的多平台代理客户端。&lt;/p&gt;
&lt;p&gt;Arch Linux 官方仓库和 AUR 中分别提供了 &lt;a class=&#34;link&#34; href=&#34;https://archlinux.org/packages/community/x86_64/clash/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;clash&lt;/a&gt; 和 &lt;a class=&#34;link&#34; href=&#34;https://aur.archlinux.org/packages/clash-premium-bin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;clash-premium-bin&lt;/a&gt; 可供下载。关于 Clash 普通版本与 premium 版本的区别可以看&lt;a class=&#34;link&#34; href=&#34;https://github.com/Dreamacro/clash/wiki/premium-core-features&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方 Wiki&lt;/a&gt;。简而言之，Clash Premium 版本拥有更多的功能但是闭源，而 Clash 普通版本是开源的，用户可以根据自己的需求选择。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装 Clash 普通版本（使用 Pacman）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S clash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装 Clash Premium 版本（使用 Yay）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yay -S clash-premium-bin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你使用的不是 Arch Linux，你也可以直接从项目的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/Dreamacro/clash/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;release&lt;/a&gt; 或 &lt;a class=&#34;link&#34; href=&#34;https://github.com/Dreamacro/clash/releases/tag/premium&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;release premium&lt;/a&gt; 中下载对应架构的 Linux 版本安装包并解压。release 中解压后的可执行文件名字可能不是 clash，建议将解压后的可执行文件重命名为 clash。为了可以方便地全局使用 Clash，建议将 Clash 复制至 &lt;code&gt;/usr/local/bin&lt;/code&gt; 并赋予可执行权限。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 复制 Clash 至 /usr/local/bin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo cp clash /usr/local/bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 赋予 Clash 可执行权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod +x /usr/local/bin/clash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置-clash&#34;&gt;配置 Clash&lt;/h2&gt;
&lt;p&gt;首先直接在终端启动 Clash 生成基础配置文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;clash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Clash 启动后会在 ~/.config/clash 目录生成配置文件。其中 ~/.config/clash/config.yaml 是需要你自定义的 Clash 的配置文件，存储你的节点和规则。你可以直接用你的配置文件覆盖这个文件。如果你使用的是 V2Ray 这样的代理程序的订阅/节点，你可以参考这个&lt;a class=&#34;link&#34; href=&#34;https://lancellc.gitbook.io/clash/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;教程&lt;/a&gt;手动转换你的配置文件或者使用&lt;a class=&#34;link&#34; href=&#34;https://merlinblog.xyz/wiki/api.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;第三方服务&lt;/a&gt;自动转换。&lt;/p&gt;
&lt;p&gt;修改完配置文件后，重新运行 Clash 即可实现代理。&lt;/p&gt;
&lt;h2 id=&#34;全局代理实现&#34;&gt;全局代理实现&lt;/h2&gt;
&lt;p&gt;系统代理可以让我们全局使用代理。在启用系统代理前，我们需要先确认一下 Clash 的 配置信息。&lt;/p&gt;
&lt;p&gt;Clash 配置文件开头部分大致如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;7890&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# HTTP/HTTPS 端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;socks-port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;7891&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Socks 端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;allow-lan&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 不知道什么意思的话保持默认即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;mode&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Rule&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 默认模式，可选项有 Rule，Global,Direct。一般保持默认即可。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;log-level&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;info&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 不知道什么意思的话保持默认即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;external-controller&lt;/span&gt;: :&lt;span style=&#34;color:#ae81ff&#34;&gt;9090&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 外置管理器端口，后文会用到&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sercet&lt;/span&gt;:  &lt;span style=&#34;color:#75715e&#34;&gt;# 外置管理器连接密钥&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;系统代理设置&#34;&gt;系统代理设置&lt;/h3&gt;
&lt;p&gt;理想情况下，我们可以直接在 &lt;code&gt;设置&lt;/code&gt; 设置系统代理。一般在 &lt;code&gt;设置&lt;/code&gt;-&lt;code&gt;网络&lt;/code&gt; 可以找到相关选项。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/clash-on-arch/image-20210818012020999.png&#34;
	width=&#34;2052&#34;
	height=&#34;1456&#34;
	srcset=&#34;https://blog.linioi.com/posts/clash-on-arch/image-20210818012020999_hu3e5aa5be8bf63212cc5f8ab501d7385b_112366_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/clash-on-arch/image-20210818012020999_hu3e5aa5be8bf63212cc5f8ab501d7385b_112366_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;网络代理&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;338px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后根据自己配置文件填入相关配置信息即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/clash-on-arch/image-20210818012226124.png&#34;
	width=&#34;970&#34;
	height=&#34;860&#34;
	srcset=&#34;https://blog.linioi.com/posts/clash-on-arch/image-20210818012226124_hue2eb9f9f9a3fd4f7c5518a6f21f67ec6_71513_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/clash-on-arch/image-20210818012226124_hue2eb9f9f9a3fd4f7c5518a6f21f67ec6_71513_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;网络代理&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;270px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;127.0.0.1&lt;/code&gt; 是本机地址（localhost），如果你不懂什么意思，保持默认即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;7890&lt;/code&gt; 和 &lt;code&gt;7891&lt;/code&gt; 这样的是端口（port）地址，对应你配置文件的 &lt;code&gt;port&lt;/code&gt; 和 &lt;code&gt;socks-port&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;设置终端代理&#34;&gt;设置终端代理&lt;/h3&gt;
&lt;p&gt;部分情况下，终端的运行程序可能不会走系统代理。我们可以通过 &lt;a class=&#34;link&#34; href=&#34;https://archlinux.org/packages/community/x86_64/proxychains-ng/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;proxychains-ng&lt;/a&gt; 让这些程序也走代理。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装 proxychains-ng&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S proxychains-ng
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后编辑 proxychains-ng 修改配置文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo vim /etc/proxychains.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;直接翻到文件末尾，按照你的 Clash 配置文件设置代理列表。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;[ProxyList]
# add proxy here ...
# meanwile
# defaults set to &amp;#34;tor&amp;#34;
socks5 	127.0.0.1 7891
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样，我们直接在终端输入 &lt;code&gt;proxychains&lt;/code&gt; 再加上命令就可以让这个命令走代理了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;proxychains &amp;lt;command&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们还可以设置相应代理的环境变量，大部分终端运行的程序会读取这这些变量。&lt;/p&gt;
&lt;p&gt;输入如下命令在当前 shell 设置代理&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export http_proxy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export https_proxy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export socks_proxy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;127.0.0.1:7891
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 export 设置环境变量只在当前 shell 有效。&lt;/p&gt;
&lt;p&gt;如果你想保持这个设置，可以在 &lt;code&gt;/etc/environment &lt;/code&gt; 设置相应变量。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 打开 /etc/environment  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo vim /etc/environment  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 在 /etc/environment 中加入如下内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http_proxy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;https_proxy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;socks_proxy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;127.0.0.1:7891
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;其他代理&#34;&gt;其他代理&lt;/h3&gt;
&lt;p&gt;部分软件可能有自己的一套代理方案，比如 Firefox 和 Chrome 可以在软件设置中设置网络代理。这些需要你自己处理。&lt;/p&gt;
&lt;h2 id=&#34;添加-clash-至守护进程&#34;&gt;添加 Clash 至守护进程&lt;/h2&gt;
&lt;p&gt;在添加之前，我们需要先确认一下 Clash 的&lt;strong&gt;绝对路径&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;输入如下命令查看 Clash 的绝对路径。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 输出结果即为 Clash 的绝对路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;which clash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Arch Linux 的默认绝对路径为 &lt;code&gt;/usr/bin/clash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果你是其他发行版并且按照上面教程操作，你的绝对路径可能是 &lt;code&gt;/usr/local/bin/clash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下面需要根据你的实际情况修改。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建文件夹用以存储 Clash 相关文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mkdir -p /etc/clash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 复制相关文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo cp ~/.config/clash/config.yaml /etc/clash/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo cp ~/.config/clash/Country.mmdb /etc/clash/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建 systemd 配置文件 &lt;code&gt;/etc/systemd/system/clash.service&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 编辑 /etc/systemd/system/clash.service&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo vim /etc/systemd/system/clash.service
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 加入如下行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Unit&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Clash daemon, A rule-based proxy in Go.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;After&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;network.target
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Service&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;simple
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Restart&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;always
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ExecStart&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/bin/clash -d /etc/clash &lt;span style=&#34;color:#75715e&#34;&gt;# /usr/bin/clash 为绝对路径，请根据你实际情况修改&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Install&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WantedBy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;multi-user.target
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;添加 Clash 至守护进程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl enable clash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;立即启动 Clash&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl start clash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;其他 systemd 命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重新启动 Clash&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl restart clash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;获取 Clash 日志&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status clash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 或者&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;journalctl -xe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果想获取存储日志信息至文件，可以在上面的 systemd 配置文件加入如下行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Works only in systemd v240 and newer!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;StandardOutput&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;append:/var/log/clash/log.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;StandardError&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;append:/var/log/clash/error.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;添加外置规则premium-版本可用&#34;&gt;添加外置规则（Premium 版本可用）&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Loyalsoldier/clash-rules&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;clash-rules&lt;/a&gt; 提供了 Clash Premium 可用的规则合集，只需要在 Clash 配置文件中添加如下 &lt;code&gt;rule-providers&lt;/code&gt; 和 &lt;code&gt;rules&lt;/code&gt; 即可使用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;rule-providers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;reject&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/reject.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;icloud&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/icloud.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;apple&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/apple.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;google&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/google.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;proxy&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/proxy.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;direct&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/direct.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;private&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/private.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gfw&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/gfw.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;greatfire&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/greatfire.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;tld-not-cn&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/tld-not-cn.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;telegramcidr&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ipcidr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/telegramcidr.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;cncidr&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ipcidr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/cncidr.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;lancidr&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;behavior&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ipcidr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./ruleset/lancidr.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;rules&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,v2ray,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,xray,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,naive,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,trojan,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,trojan-go,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,ss-local,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,privoxy,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,leaf,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,v2ray.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,xray.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,naive.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,trojan.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,trojan-go.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,ss-local.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,privoxy.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,leaf.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Surge,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Surge 2,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Surge 3,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Surge 4,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Surge%202,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Surge%203,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Surge%204,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Thunder,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,DownloadService,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,qBittorrent,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Transmission,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,fdm,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,aria2c,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Folx,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,NetTransport,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,uTorrent,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,WebTorrent,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,aria2c.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,BitComet.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,fdm.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,NetTransport.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,qbittorrent.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,Thunder.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,ThunderVIP.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,transmission-daemon.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,transmission-qt.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,uTorrent.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,WebTorrent.exe,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;DOMAIN,clash.razord.top,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;DOMAIN,yacd.haishan.me,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;RULE-SET,private,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;RULE-SET,reject,REJECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;RULE-SET,icloud,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;RULE-SET,apple,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;RULE-SET,google,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;RULE-SET,proxy,PROXY&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;RULE-SET,direct,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;RULE-SET,telegramcidr,PROXY&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;GEOIP,,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;GEOIP,CN,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;MATCH,PROXY&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;某些特殊的软件我们不希望它走代理，这里可以一并加上。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;rules&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,pacman,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;PROCESS-NAME,yay,DIRECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更多的规则配置方法可以参照这篇&lt;a class=&#34;link&#34; href=&#34;https://lancellc.gitbook.io/clash/clash-config-file/rules&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;教程&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;使用-web-管理面板可选&#34;&gt;使用 Web 管理面板（可选）&lt;/h2&gt;
&lt;p&gt;Clash 官方提供了 &lt;a class=&#34;link&#34; href=&#34;https://github.com/Dreamacro/clash-dashboard&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;clash-dashboard&lt;/a&gt; 用以图形化管理，尽管我觉得没啥用，但是可能对于某些人是刚需。&lt;/p&gt;
&lt;p&gt;clash-dashboard 依赖 Yarn 和 Node.js 运行。你也可以构建好网站源码然后找个地方托管直接访问或者本地 Nginx 之类的，这里不作说明。&lt;/p&gt;
&lt;p&gt;如果你没有安装 Node.js 的话，先安装如下命令借助 &lt;a class=&#34;link&#34; href=&#34;https://github.com/nvm-sh/nvm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;nvm&lt;/a&gt; 安装 Node.js&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 下面的版本号 v0.38.0 请手动修改为最新版本号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 向 ~/.bashrc 加入如下内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export NVM_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;/.nvm&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$NVM_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;/nvm.sh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$NVM_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;/nvm.sh&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# This loads nvm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$NVM_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;/bash_completion&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$NVM_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;/bash_completion&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# This loads nvm bash_completion&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 如果你使用的是 zsh 的话，同时也向 ～/.zshrc 加入如下内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后加载配置文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# bash 用户&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# zsh 用户&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后安装 Node.js Stable 版本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nvm install stable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你没有安装 Yarn 的话，可以使用 NPM 全局安装 Yarn。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 修改 NPM 镜像源为淘宝源（可选）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm config set registry http://registry.npm.taobao.org/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 全局安装 Yarn&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install -g yarn
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Yarn 配置淘宝源（可选）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yarn config set registry https://registry.npm.taobao.org      
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Yarn 和 Node.js 都满足后，下载并安装 clash-dashboard 所需依赖&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 如果未安装 Git 则先安装 Git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Clone clash-dashboard 源码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/Dreamacro/clash-dashboard
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 跳转到 clash-dashboard 目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd clash-dashboard
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Yarn 安装所需依赖&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yarn install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以上都配置完后，在 clash-dashboard 输入如下命令即可启动 clash-dashboard&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;此时终端会显示 Web 管理面版的地址，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/clash-on-arch/image-20210818024446945.png&#34;
	width=&#34;1400&#34;
	height=&#34;1044&#34;
	srcset=&#34;https://blog.linioi.com/posts/clash-on-arch/image-20210818024446945_hu8100f458ccd970d0c69038a79883624e_45718_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/clash-on-arch/image-20210818024446945_hu8100f458ccd970d0c69038a79883624e_45718_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;yarn start&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;134&#34;
		data-flex-basis=&#34;321px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到，上图所示地址为 http://localhost:3000/，我们可以直接打开这个网址访问 Web 管理界面。&lt;/p&gt;
&lt;p&gt;首次进入管理界面会要求你输入 Clash 的外置端口（默认 9090）和 sercet（默认为空），根据自己 Clash 配置文件输入即可。&lt;/p&gt;
&lt;p&gt;最后界面大致如图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/clash-on-arch/image-20210818025247047.png&#34;
	width=&#34;2564&#34;
	height=&#34;1536&#34;
	srcset=&#34;https://blog.linioi.com/posts/clash-on-arch/image-20210818025247047_huf421a4604269890a5ea660d0a76c633b_200677_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/clash-on-arch/image-20210818025247047_huf421a4604269890a5ea660d0a76c633b_200677_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;clash-dashboard&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;！！你在 clash-board 中所有自定义设置均为临时设置，在 Clash 重启后会重置这些设置。如果真的想改什么的话建议直接修改 &lt;code&gt;/etc/clash/config.conf&lt;/code&gt; 然后重启 Clash。&lt;/p&gt;
&lt;p&gt;问：所以 clash-dashboard 有什么用啊？&lt;/p&gt;
&lt;p&gt;答：&lt;del&gt;我也不知道&lt;/del&gt;。&lt;/p&gt;
&lt;p&gt;其实参考它的名字，思考一下为什么是 clash-dashboard 而不是 clash-web-manager 就可以得出答案了。clash-dashboard 作为仪表盘很好地、直观地向我们展示了 Clash 当前运行状况，在管理上也能提高一定的便利性。（&lt;del&gt;强行为其辩护&lt;/del&gt;）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://lancellc.gitbook.io/clash/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Unofficial Clash Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Dreamacro/clash/wiki&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Clash Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Dreamacro/clash-dashboard&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;clash-dashboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Arch Linux &#43; Windows 双系统安装教程</title>
        <link>https://blog.linioi.com/posts/18/</link>
        <pubDate>Sat, 03 Jul 2021 11:28:38 +0000</pubDate>
        
        <guid>https://blog.linioi.com/posts/18/</guid>
        <description>&lt;h2 id=&#34;有些话必须放在前面&#34;&gt;有些话必须放在前面……&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;无论从哪个角度看，Arch Linux 都不是一个新手友好型 Linux 发行版&lt;/strong&gt;。无论你是因为什么原因选择安装 Arch Linux，我都希望你能够满足下条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具有基本阅读理解水平，至少要能跟着教程来&lt;/li&gt;
&lt;li&gt;掌握电脑基础使用，能够正常开关机&lt;/li&gt;
&lt;li&gt;对电脑键盘键位和其按钮有基本了解（打字都不会的就不要打扰了。。。）&lt;/li&gt;
&lt;li&gt;能够面对满屏的命令行输出保持基本冷静&lt;/li&gt;
&lt;li&gt;具有基础的英语水平，至少命令行报错（比如出现 error）的时候，你能反应过来该命令执行出现错误。&lt;/li&gt;
&lt;li&gt;有一定自主操作能力，能根据自己实际情况解决相应问题&lt;/li&gt;
&lt;li&gt;出现突发情况，能够自行解决或者上网查阅相关资料&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;必须说明的是，写一篇面向新手的教程本身就是一件非常令人苦恼的事情。我不能确定我眼中的常识是否是新手闻所未闻的新知识，我不能确定我习惯并自以为清晰明了的描述会不会让新手看的云里雾里。因此在教程中我尽可能侧重于讲解而不是一直单调地告诉你如何去做。同时，因为面向新手，教程也会尽量避免其他知识的扩展以减少新手的阅读压力。此外，因为我很少使用 Windows（或者说 Windows 使用经验几乎为零），所以下文关于 Windows 的描述可能会有一些不准确的地方。如有错误还请指正。&lt;/p&gt;
&lt;p&gt;当然，你可以另辟蹊径，通过一些特殊方法（如安装脚本）完成安装过程，但是这样无疑失去了 Arch Linux 安装的意义。这样做最直接的后果是，对于 Arch Linux 这种需要你自己维护的系统，如果你甚至没有自己动手完成你的系统安装过程，那么在系统出现问题的时候你多半无计可施只能重装系统了。&lt;/p&gt;
&lt;p&gt;如果你是一个小白也不用太过担心，安装过程虽然是通过命令行一步一步操作，看似非常复杂繁琐。但是实际操作过程中你会发现，&lt;strong&gt;大多数情况下你并不需要理解每一个步骤的原因、每一行命令的意思&lt;/strong&gt;。一般来说，&lt;strong&gt;安装过程也不会出现什么技术难点&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果你有一定的 Linux 使用经验，根据本教程，你可以轻松完成 Arch Linux + Windows 双系统的安装，部分命令可以根据你的习惯或者需求改为其他命令，本教程仅供参照。&lt;/p&gt;
&lt;p&gt;如果你并不是想安装双系统，只是单纯安装 Arch Linux 这一个系统，可以根据需求对教程进行改动（教程步骤中也会进行说明）或参阅我单独的 Arch Linux 安装教程（写完了会贴在评论区）。&lt;/p&gt;
&lt;p&gt;我更希望的是，新人们能通过我这篇教程更多地了解 Arch Linux 和 Linux 本身，而不是机械式和目的性地完成一个操作系统的安装。&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;
&lt;h3 id=&#34;确定电脑的启动类型&#34;&gt;确定电脑的启动类型&lt;/h3&gt;
&lt;p&gt;电脑启动类型可以粗略地分为「传统 BIOS」（简称 BIOS）和「UEFI」。因为两者在启动盘制作上和安装步骤上存在差异，所以必须在安装前对电脑的启动类型进行确认。如果是最近十年生产的设备，使用的一般是 UEFI 引导。&lt;/p&gt;
&lt;p&gt;首先启动进入 Windows 桌面，同时按下 Win+R 打开运行对话框，然后输入 &lt;code&gt;msinfo32&lt;/code&gt; 后回车确认打开系统信息，查看「BIOS 模式」是不是 UEFI。如果是，则为 UEFI 引导，反之则为传统 BIOS 引导。&lt;/p&gt;
&lt;h3 id=&#34;iso-镜像烧录&#34;&gt;ISO 镜像烧录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Windows 建议使用 &lt;a class=&#34;link&#34; href=&#34;http://rufus.akeo.ie/downloads/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Rufus&lt;/a&gt; 烧录镜像。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Rufus 是一个可以帮助格式化和创建可引导USB闪存盘的工具，比如 USB 随身碟，记忆棒等等。麻雀虽小，五脏俱全，体积虽小，功能全面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，在某些 Linux 可用的软碟通(UItraISO)&lt;strong&gt;不适用于&lt;/strong&gt; Arch Linux&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下载完成后，双击打开该文件，允许或不允许 Rufus 联网检查程序更新皆可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/18/6d1d86f6e363c.png&#34;
	width=&#34;462&#34;
	height=&#34;150&#34;
	srcset=&#34;https://blog.linioi.com/posts/18/6d1d86f6e363c_hu553b21a56a1d70220c4c99a22393eaa9_8076_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/18/6d1d86f6e363c_hu553b21a56a1d70220c4c99a22393eaa9_8076_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;检查更新&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;308&#34;
		data-flex-basis=&#34;739px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;插入你的 U 盘，在「设备」选项框中选择你的 U 盘（一般会默认选中，以下图片均为示例）。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在「引导类型选择」下选择 「镜像文件（请选择）」，然后单击右侧的「选择」来选择你下载好的镜像。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;「持久分区大小」默认即可。对于「分区类型」，UEFI 引导选择「GPT」，BIOS 引导保持「MBR」即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/18/69aa1ec442d7a.png&#34;
	width=&#34;418&#34;
	height=&#34;580&#34;
	srcset=&#34;https://blog.linioi.com/posts/18/69aa1ec442d7a_hud6499ad0759c686d232c26547d61a112_32012_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/18/69aa1ec442d7a_hud6499ad0759c686d232c26547d61a112_32012_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;72&#34;
		data-flex-basis=&#34;172px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;「格式化选项」保持默认即可，单击开始来进行下一步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/18/5377133faa985.png&#34;
	width=&#34;418&#34;
	height=&#34;580&#34;
	srcset=&#34;https://blog.linioi.com/posts/18/5377133faa985_hu15749a12508dfa06aa62734b0d6d1315_30282_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/18/5377133faa985_hu15749a12508dfa06aa62734b0d6d1315_30282_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;72&#34;
		data-flex-basis=&#34;172px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择 「以 ISO 镜像 模式写入（推荐）」，单击「OK」进行下一步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/18/ea1b166c824e3.png&#34;
	width=&#34;548&#34;
	height=&#34;269&#34;
	srcset=&#34;https://blog.linioi.com/posts/18/ea1b166c824e3_hu6229d3959ca5cd3e016ae7259e2376dd_21134_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/18/ea1b166c824e3_hu6229d3959ca5cd3e016ae7259e2376dd_21134_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;488px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单击开始来烧录镜像。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/18/b3191015dc98e.png&#34;
	width=&#34;431&#34;
	height=&#34;167&#34;
	srcset=&#34;https://blog.linioi.com/posts/18/b3191015dc98e_hude06f69179e9c4444bce83cf7221fe4b_5939_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/18/b3191015dc98e_hude06f69179e9c4444bce83cf7221fe4b_5939_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;258&#34;
		data-flex-basis=&#34;619px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;等待烧录完成即可。（下图即为烧录完成的一个示例）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/18/7b7db13921e76.png&#34;
	width=&#34;418&#34;
	height=&#34;580&#34;
	srcset=&#34;https://blog.linioi.com/posts/18/7b7db13921e76_hu0384ddfbf83f4a57e4887ac5705b7d44_26183_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/18/7b7db13921e76_hu0384ddfbf83f4a57e4887ac5705b7d44_26183_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;72&#34;
		data-flex-basis=&#34;172px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Linux 使用 dd 命令 ：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; dd &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ISO镜像位置 of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/sdX bs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;4M
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;/dev/sdX &lt;/code&gt;为用作启动盘的 U 盘标识。&lt;/p&gt;
&lt;p&gt;输入如下命令确定获取电脑硬盘信息，所获取的信息中应该包含 U 盘标识
&lt;code&gt;sudo fdisk -l&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;启动前准备工作&#34;&gt;启动前准备工作&lt;/h3&gt;
&lt;h4 id=&#34;为-arch-linux-准备空闲的硬盘空间&#34;&gt;为 Arch Linux 准备空闲的硬盘空间&lt;/h4&gt;
&lt;p&gt;首先打开电脑启动到 Windows。这里我们使用「磁盘管理」来为 Arch Linux 准备一个可用的磁盘空间用以安装。如果你只打算安装 Arch Linux 单系统则可以跳过这步。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于 Windows 7 及以上的 Windows 设备，可以右键「此电脑」(或「我的电脑」及其他可能被你自定义的名字)，然后选择「管理」—「磁盘管理」。&lt;/li&gt;
&lt;li&gt;对于 Windows 8 及以上的 Windows 设备，可以直接 Win+X 后选择磁盘管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个界面显示的是你电脑上安装的所有存储设备的情况。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;不止是电脑的硬盘&lt;/em&gt;，其余如光驱和 U 盘（如果已经插入）也会在此处显示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/18/7fe58c1243b16.png&#34;
	width=&#34;986&#34;
	height=&#34;708&#34;
	srcset=&#34;https://blog.linioi.com/posts/18/7fe58c1243b16_hu62992cbcd6ba8d58f4c84cd34d96c0bd_36511_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/18/7fe58c1243b16_hu62992cbcd6ba8d58f4c84cd34d96c0bd_36511_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;139&#34;
		data-flex-basis=&#34;334px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;一般情况下，在该界面中，深蓝色的分区是主分区，浅蓝色的分区是扩展分区，绿色的是空闲没有使用的空间。我们现在要做的是选择一个剩余空间足够大的分区，空出来给我们的 Arch Linux 使用。因为 Windows 版本不同，相应的分区的名字和颜色可能会有所不同，但是我相信聪明的你一定能发现这些不同的名字其实是同一个意思的。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;以下分为两种情况处理&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果分区空间不是特别充裕，建议把最后一个分区空出来，即把该分区的数据全部备份到其他电脑分区然后把空出来的分区删掉。
注意，&lt;strong&gt;是删掉整个分区，不是格式化！！&lt;/strong&gt; 虽然说选择其中的任意一个对安装本身没有影响，但是删除分区和格式化分区在后续操作上会有所不同。除非你清楚你在做什么并且知道后续的操作方法，否则请选择删除分区。
删除分区的方法是，右键你要删除的分区，然后点击“删除卷”再确认。注意，该操作会擦除该分区的所有数据，而且过程不可逆。操作完成后该分区就会变成成绿色的“可用空间”。这就是为 Arch Linux 准备好的空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你的 Windows 下的分区空闲空间足够大，则可以从空闲空间里压缩一部分空间来安装 Arch Linux。
步骤是，先在磁盘管理器（上图界面）中该分区上点右键，然后点“压缩卷”，Windows 会让你输入一个数值。这个数值是以 MB 为单位，输入的是你要分割出来的空间大小。这个数值最大不能超过该分区的空闲空间大小。
最后点击确定，接着会有一个整理数据和分割的过程，等它整理完“空闲空间”出现就完成了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;友情提醒：&lt;strong&gt;不同分区压缩出来的空闲空间不会合并在一起给你用。所以，不要想着从每个分区里拿一个空间出来凑足需要的空闲空间。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于这个空间的大小，我认为对于初步的接触和学习来说，至少要 30G 以上，50G 为基准线。如果小于 30G 但是在 20G 以上，安装当然没有问题，不过&lt;em&gt;基本上没有空间给用户存储数据使用了&lt;/em&gt;。&lt;/p&gt;
&lt;h4 id=&#34;禁用快速启动和安全启动&#34;&gt;禁用快速启动和安全启动&lt;/h4&gt;
&lt;p&gt;Arch Linux 单系统安装可以不禁用 Windows 的快速启动但一定要禁用安全启动。&lt;/p&gt;
&lt;p&gt;该部分建议自行在网上寻找相关教程。一部分原因是因为不同系统版本存在差异不方便统一概括，一部分是因为不同电脑可能存在不同的设置方式（比如进 BIOS），因此最好的办法是在网上找到自己机型对应的教程。&lt;/p&gt;
&lt;h4 id=&#34;设置-windows-时区偏移&#34;&gt;设置 Windows 时区偏移&lt;/h4&gt;
&lt;p&gt;Arch Linux 单系统安装可以跳过这步。&lt;/p&gt;
&lt;p&gt;Linux 和 Windows 对硬件时钟的处理方式不同，如果不加以特别设置容易造成两个系统时间混乱。&lt;/p&gt;
&lt;p&gt;Arch Wiki 及我个人推荐的方法是设置 Windows 时区偏移。&lt;/p&gt;
&lt;p&gt;Windows 下&lt;strong&gt;使用管理员权限&lt;/strong&gt;执行下列命令即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reg add &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\TimeZoneInformation&amp;#34;&lt;/span&gt; /v RealTimeIsUniversal /d 1 /t REG_DWORD /f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;直接执行此命令可能会导致 Windows 显示的当前时间向后偏移 8 个小时。请不用担心，安装 Arch Linux 并联网校时之后时间会恢复正常。&lt;/p&gt;
&lt;h3 id=&#34;电脑环境确认&#34;&gt;电脑环境确认&lt;/h3&gt;
&lt;p&gt;进行到这一步时，我们默认你电脑目前处于以下环境中的某一种。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电脑使用传统 BIOS 引导+MBR 分区，且电脑已经安装一个运行正常的 Windows。电脑无与 Arch Linux 安装有关的硬件问题。&lt;/li&gt;
&lt;li&gt;电脑使用 UEFI 引导+ GPT 分区，且电脑已经安装一个运行正常的 Windows。电脑无与 Arch Linux 安装有关的硬件问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;启动盘使用&#34;&gt;启动盘使用&lt;/h3&gt;
&lt;p&gt;首先让电脑从 U 盘启动。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你问怎么从 U 盘启动？？我建议你点击此&lt;a class=&#34;link&#34; href=&#34;https://www.baidu.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;链接&lt;/a&gt;获取帮助&lt;/p&gt;
&lt;p&gt;大多数的电脑都有一个在开机时按下一个按键来选择从哪里启动的选项（例如 Dell 和 Lenovo 是 F12，台式机是 Delete）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你的电脑旧到不支持从 U 盘启动……
建议还是换台电脑吧……&lt;/p&gt;
&lt;p&gt;从U盘启动后电脑会出现一个新界面，传统BIOS启动和UEFI启动在该界面显示结果不一样。&lt;/p&gt;
&lt;p&gt;BIOS 启动界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/18/4cda84d1a6d0c.png&#34;
	width=&#34;640&#34;
	height=&#34;480&#34;
	srcset=&#34;https://blog.linioi.com/posts/18/4cda84d1a6d0c_hub6d7166dfc9dc58c90a58b4ebed67f62_53627_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/18/4cda84d1a6d0c_hub6d7166dfc9dc58c90a58b4ebed67f62_53627_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;BIOS&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;​	UEFI 启动界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/18/303179878abc6.png&#34;
	width=&#34;1024&#34;
	height=&#34;768&#34;
	srcset=&#34;https://blog.linioi.com/posts/18/303179878abc6_hu9105abd6ef4758d4c8f4e6afe821d368_4379_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/18/303179878abc6_hu9105abd6ef4758d4c8f4e6afe821d368_4379_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;UEFI&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;无论你是哪种启动，用光标选中第一项然后回车即可启动镜像。
启动成功后你应该看到类似如图所示界面：
&lt;img src=&#34;https://blog.linioi.com/posts/18/bf76fecd4806a.png&#34;
	width=&#34;800&#34;
	height=&#34;600&#34;
	srcset=&#34;https://blog.linioi.com/posts/18/bf76fecd4806a_hudd0a0bce924234a324ffb343a3f7a670_2778_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/18/bf76fecd4806a_hudd0a0bce924234a324ffb343a3f7a670_2778_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;示例&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果未出现该提示符，则可能是启动盘出现了问题，建议重新烧录镜像…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里先简单地对这个界面（终端）进行介绍，以减少后面重复累赘（当然，这部分不看也行，我觉得可能大部分人现在还看不懂，看得懂的又没必要看&amp;hellip;）。&lt;/p&gt;
&lt;p&gt;首先，包括 Arch Linux 在内的绝大多数 Linux 发行版以及 Windows 都是多用户操作系统。多用户操作系统，顾名思义，一个操作系统上可以存在多个相对独立的用户帐号，就像你熟悉的 QQ 可以同时登录多个 QQ 号。&lt;/p&gt;
&lt;p&gt;为了区分不同的用户，我们需要给不同的用户一个唯一的用户名以对他们进行区分。比如，如果已经存在一个用户他叫 xiaoming，则不能在同一个操作系统存在另一个也叫 xiaoming 的用户，这就像集合内元素的互异性。&lt;/p&gt;
&lt;p&gt;同时，因为存在多个用户，我们需要一个管理员（Admin）作为这个系统的超级用户（Super User）。管理员享有系统内至高无上的管理员权限（Administrator rights），他拥有一个特殊且唯一的用户名：root。&lt;/p&gt;
&lt;p&gt;就像用户有自己的用户名，电脑或者说主机（host）也有自己的主机名（hostname）。考虑到一个操作系统一般不会同时运行在多个设备上，所以主机名一般是给系统和程序看的，你无需特别关心。你可以自定义你电脑的主机名。&lt;/p&gt;
&lt;p&gt;补充一下，上面那段话中括号内的英文不是我矫情作秀所以特意加上去体现我的文化水平（虽然也体现不了啥），而是告诉你这些常见名词的英文称呼。你可能会在系统安装过程中或者日后使用中遇到这些名词所对应的英文单词，了解这些英文称呼能帮助你判断当前系统的情况该从何下手。&lt;/p&gt;
&lt;p&gt;言归正传。经过上面简单解释，我们可以对如下的提示符进行科学的解释。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@archiso ~ &lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;提示符 @ 前的 root 是当前用户的用户名，@ 后的 archiso 是当前系统（Arch Linux 启动盘）的主机名，～ 符号代表你当前所处的目录（至于 ～ 算啥目录&amp;hellip;这里就不加大新手理解负担了），# 代表当前用户为管理员用户（普通用户为 $），# 后面输入的命令将会以管理员权限无条件执行。&lt;/p&gt;
&lt;p&gt;特别说明，并非终端一定有这个提示符，也不是说提示符一定按照这个格式存在，因为这些都是可以由你自定义的。&lt;/p&gt;
&lt;p&gt;你需要在这个称之为终端的界面输入你的命令完成安装过程，命令输入后必须回车确认，系统才会执行。&lt;/p&gt;
&lt;p&gt;终端的命令需要精确到字符的大小写以及空格。除非你有进行特别配置，否则终端并不能智能地识别你的输入错误。所以，当你终端报错时，第一时间该做的就是检查是否打错了字符或者少了空格。&lt;/p&gt;
&lt;p&gt;终端（特指 zsh 和 bash 这样的 shell）有个特别强大且实用的功能是 Tab 键补全。比如当你需要输入 &lt;code&gt;pacstrap&lt;/code&gt;，你可以只输入 &lt;code&gt;pacs&lt;/code&gt; 然后按一次键盘的 Tab 键，终端会自动补全 &lt;code&gt;pacstrap&lt;/code&gt;。当存在多个可能的补全项，比如你只输入一个 s 就按下了 Tab 键，终端无法做到自动补全，这时它可能会列出所有可能的选项或者报错。当然，就像上面一样，这也可以由你自定义。善用 Tab 补全能极高地提高我们的输入效率。&lt;/p&gt;
&lt;p&gt;我们通过下面一行简单的命令认识一下终端的命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf /*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;rm&lt;/code&gt; 是英语单词 remove（移除）的简写，在 Linux 下通常指&lt;strong&gt;删除文件&lt;/strong&gt;；短横线 &lt;code&gt;-&lt;/code&gt; 后是该命令的参数，&lt;code&gt;r&lt;/code&gt; 代表递归，&lt;code&gt;f&lt;/code&gt; 代表强制执行；最后的 &lt;code&gt;/&lt;/code&gt; 代表根目录，&lt;code&gt;/&lt;/code&gt; 后加 &lt;code&gt;*&lt;/code&gt; 是一种常见的匹配方法（姑且先这样解释），代表 / 目录下所有文件的和文件夹。&lt;/p&gt;
&lt;p&gt;所以，根据上面的解释，我们现在可以理解，上面那行命令的意思是，删除 / 目录下所有文件和文件夹。空格将命令 &lt;code&gt;rm&lt;/code&gt; 与参数 &lt;code&gt;-rf&lt;/code&gt; 隔开，如果不隔开，终端会识别你输入的命令为 &lt;code&gt;rm-rf&lt;/code&gt;。显然，这个命令不存在，所以终端会报错。&lt;/p&gt;
&lt;h3 id=&#34;连接网络并同步时间&#34;&gt;连接网络并同步时间&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如果你能连接有线网络，最好的办法是直接插网线连接网络。&lt;/li&gt;
&lt;li&gt;如果你电脑有无线网卡的话（绝大多数电脑应该都有），则可以尝试通过 WiFi 连接。我们可以通过 archiso 内置的 iwd 软件完成这一过程。&lt;/li&gt;
&lt;li&gt;如果你操作半天还是发现自己不会用 iwd 的话，直接使用 Android 手机直接给电脑 USB 共享网络也不失为一个不错的选择。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;2020 年 7 月的 ArchISO 砍掉了 netctl，经典的 wifi-menu 已被 iwctl 取代。如果你在某个教程里还看到了「使用 wifi-menu 连接 WiFi」的字样，请提醒作者更新教程……&lt;/p&gt;
&lt;p&gt;&lt;del&gt;所以 wpa_supplicant 使用者竟成最后赢家。&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在使用 iwctl 之前，我们需要先检查一下你的网卡是否被物理禁用或软件禁用。&lt;/p&gt;
&lt;p&gt;物理禁用一般需要你的电脑存在可以物理按键或滑块可以手动关闭或打开网卡（当然，我觉得一般电脑是没有这玩意的）。&lt;/p&gt;
&lt;p&gt;软件禁用则考虑网卡是否被 rfkill 禁用，目前已知 ideapad（联想小新系列）会自动禁用无线网卡和蓝牙。&lt;/p&gt;
&lt;p&gt;对于无线网卡被 rfkill 禁用的用户，输入以下命令解除 block&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rfkill unblock all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在确认无误后，输入 &lt;code&gt;iwctl&lt;/code&gt; 进入 iwd 的 shell。&lt;/p&gt;
&lt;p&gt;输入 &lt;code&gt;device list&lt;/code&gt; 列出你电脑的无线网络设备（一般就是你电脑的网卡）&lt;/p&gt;
&lt;p&gt;常见的网卡名称是 &lt;code&gt;wlan0&lt;/code&gt; 这样的。请根据自己电脑的实际情况判断（如果看不懂上一个命令的输出可以用 &lt;code&gt;wlan0&lt;/code&gt; 这个名字试试）。&lt;/p&gt;
&lt;p&gt;输入如下命令列出所有网络，命令中的 &lt;code&gt;device&lt;/code&gt; 需要替换为你上一步看到的网卡的名称&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;station device get-networks
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;比如，如果你的网卡名称是 &lt;code&gt;wlan0&lt;/code&gt;，那么你应该输入的命令是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;station wlan0 get-networks
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你的电脑无线网卡工作正常的话，此时屏幕上会列出你熟悉的 WiFi 名称。如果没有任何结果或者出现报错的话，则需要你自己检查是否是网卡出现问题或者你打错了某个字符或者少了空格。&lt;/p&gt;
&lt;p&gt;输入如下命令连接 WiFi，就像上面一样，&lt;code&gt;device&lt;/code&gt; 需要替换成你电脑网卡的名字，&lt;code&gt;SSID&lt;/code&gt; 需要替换成你想要连接且上面已经列出的 WiFi 名称&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;station device connect SSID
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果 WiFi 有密码，此时会提示你输入密码，输入 WiFi 密码后回车即可。&lt;/p&gt;
&lt;p&gt;完成上述操作后，输入 &lt;code&gt;exit&lt;/code&gt; 退出 iwd 的 shell。&lt;/p&gt;
&lt;p&gt;为了检测电脑真的是否连接上网络，我们可以输入如下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping www.baidu.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ping 后面的网址可以是任何国内可以直连的网址。&lt;/p&gt;
&lt;p&gt;如果已连接上网络，则电脑会疯狂输出一大堆延迟测试数据。反之则只有简单的&lt;code&gt;Timeout&lt;/code&gt;报错或长时间无输出结果。&lt;/p&gt;
&lt;p&gt;此时按 &lt;code&gt;Ctrl+C&lt;/code&gt; 以中止输出。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ctrl+C&lt;/code&gt; 的意思是同时按住 Ctrl 键和 C 键。在 Linux 终端下，&lt;code&gt;Ctrl+C&lt;/code&gt; 可以近似理解为强行终止当前终端的活动进程。比如上面，ping 这个进程正在运行，我们通过 &lt;code&gt;Ctrl+C&lt;/code&gt; 将它强行终止。&lt;/p&gt;
&lt;p&gt;输入如下命令设置时间为 UTC 并完成 NTP 时间同步。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hwclock --systohc --utc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timedatectl set-ntp true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;准备硬盘分区&#34;&gt;准备硬盘分区&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;对于双系统而言，最麻烦的一部分无疑就是硬盘分区和双系统引导。完成这部分需要读者拥有发育健全的大脑并且有一定的自主操作能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你可以先输入&lt;code&gt;fdisk -l&lt;/code&gt;查看当前电脑硬盘的状态。&lt;/p&gt;
&lt;p&gt;输出结果中的 /dev/sdX 代表的是你电脑的硬盘。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（&lt;em&gt;输出结果不可能真的出现&lt;code&gt;/dev/sdX&lt;/code&gt;，此处的 X 只是代表如 a、b、c 这样的符号，如数学中用字母代替数的作用&lt;/em&gt;）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你的电脑只有一个硬盘，你的输出结果应该仅含 &lt;code&gt;/dev/sda&lt;/code&gt;和&lt;code&gt;/dev/sdb&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;/dev/sda&lt;/code&gt; 代表的是你电脑的硬盘，&lt;code&gt;/dev/sdb &lt;/code&gt;代表的是你的启动盘（U 盘）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/dev/sda&lt;/code&gt; 后的数字，如&lt;code&gt;/dev/sda1&lt;/code&gt;，则代表&lt;code&gt;/dev/sda&lt;/code&gt; 这个磁盘下的第几个分区。&lt;/p&gt;
&lt;p&gt;如果这是一块新硬盘或者已经清空的硬盘的话，你大概看不到 &lt;code&gt;/dev/sda1 &lt;/code&gt;这样的分区。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你看到了一些其它的东西，比如&lt;code&gt;/dev/nvme0n1&lt;/code&gt; 这样的，则代表你的电脑上有一块 NVMe SSD&lt;/p&gt;
&lt;p&gt;如果是&lt;code&gt;/dev/mmcblk0&lt;/code&gt; 这样的，则代表你的电脑上有 eMMC 存储。&lt;/p&gt;
&lt;p&gt;此时你的启动盘可能会被归为 &lt;code&gt;/dev/sda &lt;/code&gt;，所以&lt;strong&gt;下面要根据你自己实际情况操作&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;再有其他情况我也不知道了&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;对硬盘进行分区&#34;&gt;对硬盘进行分区&lt;/h2&gt;
&lt;p&gt;在终端输入如下命令进行分区：
&lt;code&gt;cfdisk /dev/sdX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最后一次提醒，&lt;code&gt;/dev/sdX&lt;/code&gt; 只是示例，具体命令需要根据你实际情况进行更改，比如 &lt;code&gt;cfdisk /dev/nvme0n1&lt;/code&gt; 这样的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此时屏幕应该显示你电脑相应的系统硬盘的信息。
同时，屏幕底部会显示几个［xxx］，其中有&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ Delete ] [ New ] [ Quit ] [ Help ] [ Write ] [ Dump ]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这几个［xxx］的意思分别是&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[删除] [新建] [退出] [帮助] [写入] [转储]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;底部的选项的位置可能会随着 cfdisk 的更新发生变化，但是相应选项的功能不会改变。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在硬盘信息处，应该出现一个绿色的&lt;code&gt;Free space&lt;/code&gt;，这个就是你在 Windows 中压缩给 Arch Linux 的空间。
将光标通过键盘上下方向键移至&lt;code&gt;Free space&lt;/code&gt;，再通过键盘左右方向键选择&lt;code&gt;[New]&lt;/code&gt;，以新建分区。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;新建分区需要手动输入分区大小。
例如新建一个 30G 大小的分区，你应该将光标通过键盘上下方向键移至&lt;code&gt;Free space&lt;/code&gt;，再通过键盘左右方向键选择&lt;code&gt;[New]&lt;/code&gt;，敲回车后输入&lt;code&gt;30G&lt;/code&gt;，然后回车确认&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于怎么分区以及分多大我先要进行一些说明。你可能在其他 Arch Linux 安装教程或者其他别的 Linux 发行版安装教程中看到他们关于分区大小的各种理论或规范，实际上，如何分区、分区多大是没有固定标准的。当你对 Linux 足够熟悉并清楚该如何操作，不分区都是可以的，只要完成 Windows 的引导要求即可。&lt;/p&gt;
&lt;p&gt;这里介绍一个比较通行的分区方法，同时也建议按照如下顺序进行分区。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/boot&lt;/code&gt;分区，用来存储启动信息（有时候内核也会安装在这个分区），该分区一般 512M 足够。BIOS 引导可以不单独分这个分区，但是 UEFI 引导&lt;strong&gt;必须&lt;/strong&gt;有该分区（或者能完成引导要求的类似分区）作为 EFI 分区。双系统启动可以在此时不分出&lt;code&gt;/boot&lt;/code&gt;分区，因为双系统启动可以直接把 Windows 的 EFI 分区挂载到&lt;code&gt;/boot&lt;/code&gt;上，但是据反馈因为 Windows 的 EFI 分区只有 100MB，在 Windows 11 上可能出现分区大小不足的问题。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/swap&lt;/code&gt;分区，交换分区，该分区功能很多，不等同于 Windows 的虚拟内存，建议每一个用户至少创建一个 2G 大小的交换分区。该分区大小视电脑内存大小而定。电脑小于或等于 2G 内存则建议设为内存大小的 2 倍及以上，即 4G，不过太大也没有意义。电脑内存大于 2G 可以设置为 4G。你也可以设置交换文件代替交换分区，这里不进行介绍。请不要担心 swap 分区会造成磁盘读写量过多而不设立 swap 分区（这通常是某些被厨子迫害到 ptsd 的 Mac 玩家的奇怪想法），关于 swap 分区的更多介绍可以参阅&lt;a class=&#34;link&#34; href=&#34;https://farseerfc.me/zhs/in-defence-of-swap.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt; 【译】替 swap 辩护：常见的误解&lt;/a&gt; 和 &lt;a class=&#34;link&#34; href=&#34;https://farseerfc.me/zhs/followup-about-swap.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;关于 swap 的一些补充&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/home&lt;/code&gt;分区（可选），即用户分区，用于存储用户的数据。该分区是用户自己数据存储的地方。如果你不单独分出 &lt;code&gt;home&lt;/code&gt; 分区，则你的所有数据将仅存储在 &lt;code&gt;/mnt &lt;/code&gt;分区。你可以将 &lt;code&gt;/mnt&lt;/code&gt; 分区理解为 Windows 下的 C 盘，&lt;code&gt;/home&lt;/code&gt; 是 Windows 下的 D 盘、E 盘。对于新手，建议不创建单独的 &lt;code&gt;/home&lt;/code&gt; 分区；对于有一点经验并有相关需求的用户，建议先创建 &lt;code&gt;/mnt&lt;/code&gt; 再创建 &lt;code&gt;/home&lt;/code&gt;，并把磁盘剩余的所有空间都留给 &lt;code&gt;/home&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/mnt&lt;/code&gt;分区，即根目录，用来存储系统和将来安装的软件等数据，如果你创建单独的 &lt;code&gt;/home&lt;/code&gt; 分区，则建议该分区大小不小于 20G，根据你的需求和剩余空间大小而定；如果不创建单独的 &lt;code&gt;/home&lt;/code&gt; 分区，请把磁盘所有剩余空间留给 &lt;code&gt;/mnt&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;以下是-arch-linux-官方推荐的分区方式&#34;&gt;以下是 Arch Linux 官方推荐的分区方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;UEFI 与 GPT 分区&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;挂载点&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;分区&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;分区类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;推荐大小&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/mnt/boot&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;/dev/efi_system_partition&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;EFI 系统分区&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;至少 300MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[SWAP]&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;/dev/swap_partition&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Linux swap&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;大于512MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/mnt&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/dev/root_partition&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Linux x86-64 root (/)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;设备的所有剩余空间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;BIOS 与 MBR 分区&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;挂载点&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;分区&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;分区类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;推荐大小&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[SWAP]&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;/dev/swap_partition&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Linux swap&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;大于512MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/mnt&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/dev/root_partition&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Linux x86-64 root (/)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;设备的所有剩余空间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;如果电脑是传统BIOS启动，选择&lt;code&gt;[ New ]&lt;/code&gt;回车后有可能需要选择建立&lt;code&gt;主分区&lt;/code&gt;还是&lt;code&gt;扩展分区&lt;/code&gt;。(该情形会在硬盘中没有分区或者主分区不足4个时询问。如果硬盘已经有4个主分区则不会询问，默认建立扩展分区。)
EFI启动可以建立无限个主分区，所以不会询问，直接建立主分区。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;原则上尽量使用主分区。如果主分区用尽，建立扩展分区时注意&lt;strong&gt;不要修改分区大小&lt;/strong&gt;，直接回车。因为扩展分区本身&lt;em&gt;不是一个分区&lt;/em&gt;。
回车后会发现扩展分区下的硬盘还是剩余空间，只是被划分到扩展分区下了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按上面建议的分区大小，分别建立四个分区后，选择&lt;code&gt;[ Write ]&lt;/code&gt;写入再选择&lt;code&gt;[ Quit ]&lt;/code&gt;退出。退出时你需要输入&lt;code&gt;yes&lt;/code&gt;确认。&lt;em&gt;输入完整的&lt;code&gt;yes&lt;/code&gt;不是输入一个&lt;code&gt;y&lt;/code&gt;&lt;/em&gt;。&lt;/p&gt;
&lt;h2 id=&#34;挂载分区&#34;&gt;挂载分区&lt;/h2&gt;
&lt;p&gt;在终端输入如下命令以检查分区情况：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fdisk -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时屏幕应该显示你当前电脑的硬盘及各硬盘的分区情况。&lt;/p&gt;
&lt;p&gt;分区表应该出现你所新建的分区，且大小与你输入的分区大小一致。&lt;/p&gt;
&lt;p&gt;确认新分区建立无误后，输入如下命令对新建分区进行格式化。这里使用经典的 ext4 文件系统，在你对 Linux 文件系统有一点了解后，你可以换用其他的文件系统，比如 btrfs。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下面所有的分区符号如&lt;code&gt;/dev/sda1&lt;/code&gt;仅为示例，实际操作时应该结合自己实际情况进行格式化。
假设新建的&lt;code&gt;/mnt&lt;/code&gt;分区符号为&lt;code&gt;/dev/sdb3&lt;/code&gt;，则应该输入&lt;code&gt;mkfs.ext4 /dev/sdb3&lt;/code&gt;以格式化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;格式化&lt;code&gt;/mnt&lt;/code&gt;分区：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkfs.ext4 /dev/sda1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;格式化&lt;code&gt;/boot&lt;/code&gt;分区（如果自行创建了 boot 分区）
为了通用性，建议将该分区格式化为&lt;code&gt;fat32&lt;/code&gt;格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkfs.vfat -F32 /dev/sda2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初始化&lt;code&gt;/swap&lt;/code&gt;分区：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkswap /dev/sda3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;格式化&lt;code&gt;/home&lt;/code&gt;分区（如果有）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkfs.ext4 /dev/sda4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;格式化分区为 ext4 分区时通常需要输入&lt;code&gt;y&lt;/code&gt;以确认。
其他分区格式化，没有报错则意味着操作成功。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来挂载分区&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;挂载&lt;code&gt;/mnt&lt;/code&gt;分区：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount /dev/sda1 /mnt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;挂载&lt;code&gt;/boot&lt;/code&gt;分区：
再次强调，UEFI 引导&lt;strong&gt;必须&lt;/strong&gt;有独立的 boot 分区（或者有类似功能的其他分区）作为 EFI 分区，&lt;strong&gt;否则系统将因无引导而无法启动&lt;/strong&gt;。双系统安装可以直接挂载 Windows 的 EFI 分区，如果出现分区大小不足请自行创建一个 boot 分区。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p /mnt/boot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount /dev/sda2 /mnt/boot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;code&gt;/swap&lt;/code&gt;分区无需挂载，但是需要输入如下命令启用：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;swapon /dev/sda3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;建立&lt;code&gt;/home&lt;/code&gt;分区目录并挂载分区：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir /mnt/home
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount /dev/sda4 /mnt/home
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;至此，硬盘分区和相应目录挂载已经全部完成。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;建议再次输入&lt;code&gt;lsblk&lt;/code&gt;命令检查硬盘分区情况，一般情况下，每个相应的分区后面应该标注其挂载的目录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;以上过程中若出现报错不通过的情况，为了节约排查问题时间，可以直接从重新执行&lt;code&gt;cfdisk&lt;/code&gt;命令重新分区开始。&lt;strong&gt;重新分区前，已经挂载好的目录需要进行卸载。&lt;/strong&gt;
例，卸载&lt;code&gt;/home&lt;/code&gt;分区目录的命令如下：
&lt;code&gt;unmount /dev/sda4 /mnt/home&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;安装-arch-linux-基本系统&#34;&gt;安装 Arch Linux 基本系统&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Arch Linux 的安装不仅需要连接网络，而且还要从网络下载大量数据。因为 Arch Linux 主服务器在国外，加之某些众所周知的原因，国内网络使用国外服务器下载会非常慢。因此，建议使用国内镜像网站进行下载和安装工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;输入如下命令，利用 reflector 自动替换国内镜像源&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reflector --country &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;China&amp;#39;&lt;/span&gt; --age &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; --protocol https --sort rate --save /etc/pacman.d/mirrorlist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该命令相对来说比较长，请注意不要打错字符或漏空格。&lt;/p&gt;
&lt;p&gt;修改完镜像源之后，输入如下命令刷新镜像源&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -Syy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面开始安装基本系统。&lt;/p&gt;
&lt;p&gt;开始之前，我有必要介绍一下 Linux 的 软件包管理程序（package manager，我简称为包管理）。Linux 的 包管理 是 Linux 发行版中最重要的软件之一（虽然有的 Linux 发行版没有包管理），不同的 Linux 发行版除非存在父子关系否则包管理是不同的，Linux 几乎所有的软件都必须通过 包管理 安装。&lt;/p&gt;
&lt;p&gt;包管理安装软件分为在线安装和本地安装。这里仅介绍在线安装（本地安装大家都懂吧&amp;hellip;）。&lt;/p&gt;
&lt;p&gt;在线安装是绝大多数情况下你使用的安装方法。包管理在当前使用的软件镜像源（mirror）中搜索你想要安装的软件包，然后直接下载安装。为了加快在线下载速度，几乎所有 Linux 包管理都会从镜像源下载软件包列表，这样如果需要安装软件的话，可以直接从本地缓存中搜索软件包的下载链接。也因为本地缓存的机制，我们需要经常刷新本地缓存，上面的 &lt;code&gt;pacman -Syy&lt;/code&gt; 就是 Arch Linux 刷新本地缓存的方法。&lt;/p&gt;
&lt;p&gt;Arch Linux 的包管理软件叫做 Pacman（没开玩笑，就这名字&amp;hellip;）。Pacman 在线安装软件的命令为  &lt;code&gt;pacman -S 软件包名字&lt;/code&gt;  ，关于 Pacman 的更多用法文末会进行介绍。&lt;/p&gt;
&lt;p&gt;输入如下命令借助 &lt;a class=&#34;link&#34; href=&#34;https://git.archlinux.org/arch-install-scripts.git/tree/pacstrap.in&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pacstrap&lt;/a&gt; 脚本完成安装。pacstrap 是 ArchISO 中的一个脚本，可以自动完成基础但繁琐的系统配置如内核的配置。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacstrap /mnt base base-devel linux linux-firmware nano vim e2fsprogs ntfs-3g 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上述命令中，base 是元软件包（基本系统所需依赖，你可以不知道它是啥但是必须安装），base-devel 是基础软件包组，linux 是内核，linux-firmware 是固件包，nano、vim 是常用编辑器，e2fsprogs 是 ext4 文件系统所需工具，如果你是按照上面教程使用 ext4 文件系统则必须安装该软件包。ntfs-3g 是与 Windows 的 NTFS 有关的软件包，如果是单系统可以不安装。&lt;/p&gt;
&lt;p&gt;这里简单介绍一下软件包组。对于 Linux 用户来说，我们可能需要一次性安装一大堆软件包。虽然我们可以通过包管理批量安装多个软件，但是敲那么多软件的名字无疑非常的枯燥无聊且繁琐。因此，Arch Linux 的打包者将具有相关性的多个软件包归入一个软件包组，虽然软件包组不是一个软件包，但是安装操作与一个真正的软件包相同。比如上面的 base-devel 就是将系统基础软件包归入一个软件包组，我们只需要输入软件包组的名字就可以安装这些软件包。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你可以将上述命令中的&lt;code&gt;linux&lt;/code&gt;替换为 &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/index.php/Kernel&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kernel&lt;/a&gt; 页面中介绍的内核软件包。如果知道自己的需求并了解后果，可以不安装 &lt;code&gt;linux-firmware&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;安装过程中会出现选择软件包的提示，建议“默认=all”，即直接敲回车默认安装，输入一个“y”确认安装。
在网络不佳的情况下，下载过程可能会出现意外断流，此时重复上面的命令即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;根据 &lt;a class=&#34;link&#34; href=&#34;https://t.me/archlinuxcn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Arch Linux CN Messages&lt;/a&gt; 的&lt;a class=&#34;link&#34; href=&#34;https://t.me/archlinuxcn/228&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;消息&lt;/a&gt;，因为 archlinux-keyring 20220713 替换了一部分 master key ，一些包使用新 key 打包，安装时可能出现一些包无法经过签名校验。如果你上一个命令执行出现报错，可以先尝试以下命令单独更新 archlinux-keyring，然后再重新进行安装。&lt;/p&gt;
&lt;p&gt;报错示例：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#这是错误日志不是命令
error: failed to commit transaction (invalid or corrupted &amp;gt; package)
Errors occurred, no packages were upgraded.
==&amp;gt; ERROR: Failed to install packages to new root
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;单独更新 archlinux-keyring：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -Sy archlinux-keyring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;当安装停止且成功后，输入如下命令以生成 fstab 文件。fstab 是 file system table 的缩写，你可以不知道它是啥但是它必不可少。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;genfstab -U -p /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了确认文件生成，建议输入如下命令以确认：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano /mnt/etc/fstab
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;确认无误后，输入&lt;code&gt;Ctrl + X&lt;/code&gt;退出。&lt;/p&gt;
&lt;p&gt;Nano 是 Linux 下一个简单轻量的文本编辑器，适合新手使用，后文还会多次使用该编辑器。如果已经有一定的 Linux 使用经验，建议换用 Vim。&lt;/p&gt;
&lt;p&gt;如果一切正常的话，此时你应该成功在电脑硬盘安装了 Arch Linux 基本系统。&lt;/p&gt;
&lt;h2 id=&#34;安装基本系统后的环境配置&#34;&gt;安装基本系统后的环境配置&lt;/h2&gt;
&lt;p&gt;输入如下命令进入新安装的系统：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arch-chroot /mnt /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在你进入了电脑硬盘上的 Arch Linux 。&lt;/p&gt;
&lt;p&gt;如果一切正常的话，细心的你会发现提示符由 &lt;code&gt;root@archiso ~ #&lt;/code&gt; 变为 &lt;code&gt;[root@archiso /]#&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;上面有提及，Linux 中默认有一个用户叫 &lt;code&gt;root&lt;/code&gt;，拥有对系统的一切权力。这意味着，即使让系统删除自己本身也会执行无误，比如著名命令 &lt;code&gt;rm -rf /*&lt;/code&gt;，&lt;strong&gt;千万不要输入这个命令，否则后果自负&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;现在安装系统默认使用的是 root 用户。&lt;/p&gt;
&lt;p&gt;输入下面命令来设置 root 用户密码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;passwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;输入密码后需要回车确认，密码需要输入两次。&lt;/p&gt;
&lt;p&gt;密码在输入的时候不会显示，不用担心是自己键盘坏了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为root用户权力过大大，即使删掉系统本身，也会被执行。为了避免日常使用因为权限过高造成某些不可逆而又本可以避免的损失，Linux 桌面用户需要添加一个普通用户，且该用户可以获取临时root权限。
一般情况下，这个新添加的用户将会是你后续登录 Linux 的&lt;em&gt;主要用户&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;执行以下命令新建一个隶属于 wheel 组的新用户。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;useradd -m -G wheel -s /bin/bash 你的用户名 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里友情提醒一下，上面所设的用户名必须是小写字母，而且最好短一点（如果你不怕之后使用麻烦的话就随意吧）。&lt;/p&gt;
&lt;p&gt;输入如下命令为新建用户设置密码（修改密码也是这个命令），密码不少于 6 位或 8 位。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;passwd 你的用户名
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;同上，密码需要输入两次，且密码不会显示。&lt;/p&gt;
&lt;p&gt;因为这个密码在日常使用中可能需要经常输入，所以建议密码不要太长，但为了安全性也不要太短太简单。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了该普通用户能获取临时 root 权限，我们需要修改 wheel 的权限设置。修改权限设置的最好方法就是使用 &lt;code&gt;visudo&lt;/code&gt;，但是对于不会使用 vi 的新手，也可以直接使用 nano 修改相关文件。
输入如下命令打开sudoers文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano /etc/sudoers
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在打开的文件中找到以下两行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Uncomment to allow members of group wheel to execute any command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# %wheel ALL=(ALL) ALL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;确认无误后， 把&lt;code&gt;%wheel&lt;/code&gt;前面的注释符号（#）去掉，（%）要留下。
最后的结果应该是下面这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Uncomment to allow members of group wheel to execute any command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;%wheel ALL&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;ALL&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ALL
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同时按&lt;code&gt;Ctrl + X&lt;/code&gt;，然后保存退出。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;后续若需要普通用户在执行某条命令时临时获得 root 权限，则在该条命令前加上&lt;code&gt;sudo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例：&lt;code&gt;sudo pacman -Syu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;code&gt;sudo rm -rf /*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在有密码的情况下，使用 sudo 执行命令需要输入 &lt;strong&gt;当前用户的密码&lt;/strong&gt; 以二次确认。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如同用户有一个名字一样，Linux 下电脑也需要一个名字。
输入如下命令配置电脑的主机名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo 你电脑的主机名 &amp;gt; /etc/hostname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;主机名可以是任何你喜欢的名字，但是不能含空格等字符。如果你不清楚的话，最好不要在主机名中加入一些奇奇怪怪的特殊字符（不会真的有人那么无聊吧）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面对系统 host 进行配置（可选，如果嫌麻烦可以跳过这一步，如果不设置可能会在网络变更时出现应用无法启动等问题）。&lt;/p&gt;
&lt;p&gt;输入以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano /etc/hosts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你应该会看到如下符号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&amp;lt;ip-address&amp;gt; &amp;lt;hostname.domain.org&amp;gt; &amp;lt;hostname&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你需要添加相应字符，使得界面如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;127.0.0.1	localhost
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::1		localhost
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;127.0.1.1	你电脑主机名.localdomain	你电脑主机名
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;如果系统有一个永久的 IP 地址，请使用这个永久的 IP 地址而不是 &lt;code&gt;127.0.1.1&lt;/code&gt;&lt;/em&gt;，不过一般来说是没有这个东西的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;确认无误后，同时按住&lt;code&gt;Ctrl + X&lt;/code&gt;，输入&lt;code&gt;y&lt;/code&gt;，回车再退出。&lt;/p&gt;
&lt;h2 id=&#34;安装微码并配置-grub-引导&#34;&gt;安装微码并配置 Grub 引导&lt;/h2&gt;
&lt;p&gt;微码安装命令根据处理器选择。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Intel 用户输入如下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S intel-ucode
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AMD 用户输入如下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S amd-ucode
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至于其他型号的处理器比如国产处理器我就不知道怎么安装了&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;以下操作分为传统 BIOS 引导和 UEFI 引导&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;如果不安装双系统，则不需要安装 os-prober。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果你是传统BIOS引导，则输入以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S grub os-prober
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后输入以下命令安装到硬盘：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grub-install --target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;i386-pc /dev/sda --recheck
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;第二条命令中&lt;code&gt;/dev/sda&lt;/code&gt;应该根据你实际情况，改为你自己硬盘名字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果你是UEFI引导，则输入以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S grub efibootmgr os-prober
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后输入以下命令安装到硬盘：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grub-install --target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x86_64-efi --efi-directory&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/boot --bootloader-id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;grub --recheck
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;如果你未按照上述过程将 EFI 系统分区挂载到 /boot ，&lt;em&gt;请自行修改 &amp;ndash;efi-directory 的值&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Grub 2.06 更新后默认禁用 os-prober。虽然我一时半会也还不知道这样做的意义何在，但是上游有改动，我们用户也只能动手适配了。&lt;/p&gt;
&lt;p&gt;输入下面命令为 Grub 启用 os-prober。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GRUB_DISABLE_OS_PROBER=false&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/default/grub
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后输入如下命令生成必要的配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意，你一定要确定输入上面命令有输出结果。&lt;/p&gt;
&lt;p&gt;输出结果大致如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Generating grub configuration file ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Found linux image: /boot/vmlinuz-linux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Found initrd image&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in /boot: initramfs-linux.img
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Found fallback initrd image&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in /boot: initramfs-linux-fallback.img
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;如果输入上一条命令没有任何输出结果，&lt;strong&gt;请务必停下来检查&lt;/strong&gt;上面所有步骤有没有哪一处出现问题，或者重新进行所有安装步骤！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;配置语言和区域&#34;&gt;配置语言和区域&lt;/h2&gt;
&lt;p&gt;/etc/locale.gen 是一个仅包含注释文档的文本文件。指定您需要的本地化类型，只需移除对应行前面的注释符号&lt;code&gt;＃&lt;/code&gt;即可。（建议选择带 UTF-8 的项）
输入如下命令修改 locale.gen 文件，配置语言环境：
&lt;code&gt;nano /etc/locale.gen&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;分别找到以下字符，删除该行最前面的&lt;code&gt;#&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#en_US.UTF-8 UTF-8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#zh_CN.UTF-8 UTF-8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#zh_TW.UTF-8 UTF-8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;比如，你看到&lt;code&gt;#en_US.UTF-8 UTF-8&lt;/code&gt;时，你需要删除该行最前面的&lt;code&gt;#&lt;/code&gt;，使之变成&lt;code&gt;en_US.UTF-8 UTF-8&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;你也可以根据自己需求，添加其他环境。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;编辑完成后同时按住&lt;code&gt;Ctrl + X&lt;/code&gt;退出。&lt;/p&gt;
&lt;p&gt;退出后输入如下命令刷新区域信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;locale-gen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你上一步操作无误的话，命令输出结果应该包含&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;en_US.UTF-8 UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zh_CN.UTF-8 UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zh_TW.UTF-8 UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输入如下命令将区域信息写入 locale-conf 文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8 &amp;gt; /etc/locale.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;毫无疑问，你可以选择将上一条命令的&lt;code&gt;en_US.UTF-8&lt;/code&gt;改为&lt;code&gt;zh_CN.UTF-8&lt;/code&gt;。&lt;strong&gt;但请谨慎考虑后进行操作&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;locale.conf 文件是全局设置，如果这里设成中文或者其他非英文环境，桌面环境下字符会正常显示，&lt;strong&gt;但是在命令行下会变成乱码&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果看不懂请忽略此段。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;输入如下命令设置时区为亚洲上海：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装桌面环境&#34;&gt;安装桌面环境&lt;/h2&gt;
&lt;p&gt;没错，对于 Linux 发行版，系统和 GUI 环境是分离的。（GUI 是图形化用户界面的简称）&lt;/p&gt;
&lt;p&gt;一般来说，一个完整的 Linux 操作系统是不需要 GUI 的。如果我们是想将电脑变成一个 Linux 服务器，安装教程可以到此为止，但是对于我们普通的 Linux 桌面用户，则需要安装相应的图形化界面。&lt;/p&gt;
&lt;p&gt;Linux 下的图形化界面可以不严谨地分为窗口管理器（Windows Manager，简称 WM）和桌面环境（Desktop Environment，简称 DE）。虽然有话说“窗口管理器是所有 Linux 用户的终点”，但是对于新手来说，桌面环境要更为友好一点。&lt;/p&gt;
&lt;p&gt;桌面环境可以不严谨地分为由 X11 驱动和由 Wayland 驱动。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;X11 通常简称为 X，属于 X.Org 项目，也可以粗略地称为 Xorg。Xorg 属于图形化应用程序必备条件，属于无论如何都需要安装的软件包组，是所有桌面环境的依赖（dependence）。几乎所有的桌面环境都支持 X11（之所以说几乎所有而不是全部，是因为我也不知道有没有不支持的&amp;hellip;)。X11 的缺点是太过古老、代码的历史残留太多，对高分辨率屏幕（简称 HiDPI，通常指分辨率在 1920x1080 以上的屏幕）支持不佳。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wayland 是一个用于混成窗口管理器与其客户端对话的协议，也是实现该协议的一个库。Wayland 的显著优点是对 HiDPI 的支持较好，但是目前还并未普及，因此目前表现的稳定性和兼容性较差，游戏性能感人。Xwayland 提供了一个兼容层在 Wayland 上运行 X11 软件。目前绝大多数桌面环境不支持 Wayland 或者使用效果不佳。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你电脑不属于 HiDPI，这里建议先使用 X11 而不是 Wayland。如果你的电脑属于 HiDPI，这里建议先尝试在 X11 完成 HiDPI 配置，如果配置效果不佳或者不愿动手完成复杂的配置，再尝试 Wayland。&lt;/p&gt;
&lt;p&gt;郑重申明，我不是歧视 Wayland。虽然说 Wayland 很可能是未来 Linux 桌面环境的主流，但是 Wayland 的目前的表现确实有点感人。且不论支持 Wayland 的桌面环境已经是少之又少，在支持 Wayland 的桌面环境中，除了少数桌面环境下表现尚可，其他的桌面环境下表现几乎不能日常桌面环境使用的需求。&lt;/p&gt;
&lt;p&gt;（以上发言来自一名 Wayland 受害者）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里插几句题外话。&lt;/p&gt;
&lt;p&gt;你可能在某些地方看到一些 Linux 狂热粉/半吊子 狂吹 “Linux bug 数量少”、“稳定性吊打 Windows 和 macOS”、“安全性高”之类的&lt;del&gt;鬼话&lt;/del&gt;发言。虽然我的观点一直是“系统的稳定性和安全性取决于用户”，但可以肯定的是，Linux 的安全性和稳定性确实很高，前提是没有安装 GUI 环境。。。。&lt;/p&gt;
&lt;p&gt;虽然较之前几年，Linux 的 GUI 环境尤其是桌面环境有了长足发展，从开始“能看个视频就不错”到现在“甚至还能玩游戏”，但是平心而论当前综合体验相较 Windows 和 macOS 来说，功能属于勉强能用，bug 是只多不少。Linux 有很多桌面环境可以选择，但是几乎每一款都很坑。如果你没有感受到桌面的 bug 的话，只能说明你没发现（所以 Linux 用户都去玩窗口管理器了。。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;咳咳，言归正传。上面已经说到，Linux 的桌面是独立于系统本身的，也就是说，系统的启动和桌面的启动是完完全全的两码事。如果你不想每次启动系统后都要在黑乎乎的终端手动启动桌面的话，可以借助显示管理器（Display Manager，简称 DM，有些地方叫做登录管理器）。显示管理器同样也有很多个，可以和不同的桌面环境交叉使用。&lt;/p&gt;
&lt;p&gt;没错，显示管理器和桌面环境也是分开的。虽然这看起来让人感觉有点凌乱，但是这不恰恰说明 Linux 的高度自由性吗？（雾）&lt;/p&gt;
&lt;p&gt;Arch Linux 可选择的桌面环境很多，这里只介绍相对主流和热门的两个桌面环境，显示管理器会附带介绍。&lt;/p&gt;
&lt;p&gt;不过在安装桌面环境之前，我们需要先安装 Xorg。输入如下命令安装 Xorg 软件包组。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S xorg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装过程中，系统会询问你安装其中哪些软件包。如无其他需求或考虑，直接回车即可。&lt;/p&gt;
&lt;h3 id=&#34;kde&#34;&gt;KDE&lt;/h3&gt;
&lt;p&gt;KDE 被誉为“最像 Windows 的 Linux 桌面”（雾）。基于 Qt 的 KDE 拥有超高的可自定义性、华丽的系统特效、完善的系统功能、人类友好的交互逻辑，以及你熟悉的开始菜单（&lt;/p&gt;
&lt;p&gt;虽然 KDE 默认的样式有点一言难尽，但是 KDE 的高度可自定义性让 KDE 可以变得极其华丽甚至长得和 Windows 或 macOS 接近一模一样。不夸张地说，KDE 几乎可以在外观上做到变成用户想要的任何样子，这一点可以参考 KDE 的美化教程的数量（虽然和 KDE 默认长得太丑也有一点关系）。&lt;/p&gt;
&lt;p&gt;除桌面本身以外，KDE 软件如 Kate 这样的编辑器也是非常简单好用（你之后体会到的），自带的系统组件可以满足绝大多数日常桌面需求。&lt;/p&gt;
&lt;p&gt;由于以上诸多优点，KDE 被认为是最适合新手并且也是最适合人类的 Linux 桌面环境，Arch Linux + KDE 很多时候被认为是一种标配。&lt;/p&gt;
&lt;p&gt;配合 KDE-Plasma 使用的最佳选择是 SDDM 显示管理器， KDE 和 Arch Wiki 都推荐使用此组合。&lt;/p&gt;
&lt;p&gt;输入如下命令安装 SDDM 和 KDE Plasma 桌面和某些 KDE 基础组件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S plasma sddm konsole dolphin ark gwenview
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你也可以直接输入下面的命令安装 SDDM 和 KDE 全家桶：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S plasma sddm kde-applications
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;KDE 全家桶内包含了许多小游戏和某些意义不明的软件，适合 KDE 信仰用户。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前为止，KDE 默认使用的是 X11，Wayland 支持尚不完善。如果你想使用 Wayland，则需要安装 plasma-wayland，然后在 SDDM 登录时选择 Wayland 版本 Plasma。&lt;/p&gt;
&lt;p&gt;输入如下命令安装 plasma-wayland：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S plasma-wayland
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你使用 Nvida 显卡，则需要额外安装 egl-wayland：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S egl-wayland
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;输入如下命令设置 SDDM 开机自启：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl enable sddm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输入完命令后，下次开机会直接进入图形界面，而非命令行界面。&lt;/p&gt;
&lt;h3 id=&#34;gnome&#34;&gt;GNOME&lt;/h3&gt;
&lt;p&gt;GNOME 被誉为“超像 macOS 的 Linux 桌面”（不是最像，因为很多桌面比它还像，让人叹为观止）。GNOME 基于 GTK，是 GNU 项目的一部分，虽然前段时间由于某些开源社区的冲突，官方公开声明表示自己不属于 GNU，但是这不改变它最初的性质。因为 GNU 协议，GNOME 是 Ubuntu 等一众 Linux 桌面发行版的默认桌面。&lt;/p&gt;
&lt;p&gt;GNOME 遵循 Material Degisn 设计语言，界面圆润清新，动画优雅舒适，自带功能较少但是扩展插件极多且功能丰富，可自定义性较强，有着先进但是不怎么人类友好的交互逻辑。&lt;/p&gt;
&lt;p&gt;GNOME 默认样式除了图标以外都属于尚可，GTK 的特效和样式丰富的主题让 GNOME 随便配置一下就可以做到简约与美观并存（当然，你可以配置得非常华丽）。&lt;/p&gt;
&lt;p&gt;GNOME 40 正式砍掉了侧边 Dash 栏并将其移动到桌面切换界面的底端，重新定义了 GUI 桌面的操作逻辑，极大地提高了桌面的使用效率。虽然目前骂声一片，但是真金不怕火炼，GNOME 40 一定会在未来彰显它对人类进步做出的巨大贡献。&lt;/p&gt;
&lt;p&gt;因为 GNOME 功能高度依赖扩展，而扩展又大多是非官方人员开发的，所以可能存在各种兼容性问题，也是“GNOME=bug”这个说法的来源之一。&lt;/p&gt;
&lt;p&gt;GNOME 自带软件实用性较差，如果有需求的话，可以使用 KDE 软件作为补充。&lt;/p&gt;
&lt;p&gt;GNOME 有配套的显示管理器 GDM。输入如下命令安装 GNOME 和 GDM。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S gnome gdm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果想要 GNOME 全家桶的话，可以安装 gnome-extras 软件包组&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S gnome-extras
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;GNOME 默认使用 Wayland 且表现基本满足日常使用需求（我没有开玩笑），但是如果你使用 Wayland 出现问题，可以通过在 GDM 禁用 Wayland 以更换为 X11。&lt;/p&gt;
&lt;p&gt;我们需要编辑 &lt;code&gt;/etc/gdm/custom.conf&lt;/code&gt; 以禁用 Wayland。输入如下命令打开该文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano /etc/gdm/custom.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在文件中找到以下行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#WaylandEnable=false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;去除该行开头的 &lt;code&gt;#&lt;/code&gt; 注释，然后 &lt;code&gt;Ctrl+X&lt;/code&gt; 再输入 y 保存退出。&lt;/p&gt;
&lt;p&gt;重启后下次登录将默认禁用 Wayland。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;输入如下命令设置 GDM 开机自启：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl enable gdm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输入完命令后，下次开机会直接进入图形界面，而非命令行界面。&lt;/p&gt;
&lt;h2 id=&#34;对系统进行本地化&#34;&gt;对系统进行本地化&lt;/h2&gt;
&lt;h3 id=&#34;安装中文字体&#34;&gt;安装中文字体&lt;/h3&gt;
&lt;p&gt;可选的字体含以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Google Noto Fonts 系列
noto-fonts
noto-fonts-cjk
noto-fonts-emoji&lt;/li&gt;
&lt;li&gt;思源黑体
adobe-source-han-sans-otc-fonts&lt;/li&gt;
&lt;li&gt;文泉驿
wqy-microhei
wqy-zenhei&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以文泉驿为例，输入如下命令安装文泉驿米黑字体：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S wqy-microhei
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里建议全部安装以避免字体缺失导致的显示异常。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;设置中文区域&lt;/p&gt;
&lt;p&gt;输入如下命令新建 .xprofile 文件：
&lt;code&gt;nano ~/.xprofile&lt;/code&gt;
&lt;em&gt;如果已有此文件，也可以输入如上命令打开此文件&lt;/em&gt;
在文件中添加以下内容：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export LANG=zh_CN.UTF-8

export LANGUAGE=zh_CN:en_US

export LC_CTYPE=en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;同时按住&lt;code&gt;Ctrl + X&lt;/code&gt;，然后保存退出。&lt;/p&gt;
&lt;p&gt;如果你是一步步按照本教程操作，则你此时是在 root 用户目录创建了 .xprofile 文件。因此，此时 .xprofile 只会影响 root 用户。
输入如下命令，将该文件复制到你创建的普通用户目录下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp ~/.xprofile /home/你的用户名
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时，你创建的普通用户区域也配置完成。&lt;/p&gt;
&lt;h2 id=&#34;arch-linux-已成功安装在你的电脑上&#34;&gt;Arch Linux 已成功安装在你的电脑上！&lt;/h2&gt;
&lt;p&gt;至此，Arch Linux 已经算是安装完成了。但是对于日常桌面用户，我们还有一些东西没有配置，而这些配置能优化我们的桌面体验。以及，你是否还记得 Windows 的引导还没生成呢（&lt;/p&gt;
&lt;p&gt;我们先输入如下命令启用 NetworkManager（注意大小写）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl enable NetworkManager
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NetworkManager 是一个方便好用的网络管理小组件，大部分桌面环境都内置了该软件。如果你当前使用的桌面环境没有内置该软件，则输入以下命令安装并启用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S networkmanager
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl enable NetworkManager
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;做完这些，我们先重启到你的桌面环境完成后续步骤。重启到桌面环境的好处是，你可以直接使用鼠标复制我后续的命令。&lt;/p&gt;
&lt;p&gt;如果你是按照我的教程一步一步来的，你现在应该还没有安装浏览器。这里推荐先安装 Firefox 浏览器（Chrome、Edge 之类的由于打包协议不在官方软件仓库中，无法在 Pacman 直接安装，后续会介绍如何安装 Chrome 和 Edge）。&lt;/p&gt;
&lt;p&gt;输入如下命令安装 Firefox：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacman -S firefox
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;先输入 &lt;code&gt;exit&lt;/code&gt; 退出 chroot，然后输入&lt;code&gt;reboot&lt;/code&gt;重启，在屏幕完全黑下来的时候拔掉你的 U 盘。&lt;/p&gt;
&lt;p&gt;启动成功后，登录你的普通用户即可。&lt;/p&gt;
&lt;h2 id=&#34;安装完成后的一些基本配置和某些问题的解决&#34;&gt;安装完成后的一些基本配置和某些问题的解决&lt;/h2&gt;
&lt;p&gt;首先在系统设置连接网络（直接插网线的就不需要什么额外操作了）。&lt;/p&gt;
&lt;p&gt;接着找到你桌面环境的虚拟终端（Terminal，KDE 自带的叫做 Konsole，GNOME 自带的叫做 gnome-terminal）。后续命令在这个虚拟终端输入就行。&lt;/p&gt;
&lt;h3 id=&#34;安装中文输入法&#34;&gt;安装中文输入法&lt;/h3&gt;
&lt;p&gt;安装 fcitx 输入法模块：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S fcitx-im fcitx5-chinese-addons 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配置输入法的环境变量，输入如下命令编辑 /etc/environment&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /etc/environment
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在文件中添加以下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GTK_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;QT_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XMODIFIERS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;@im&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SDL_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;　　修改完成后，保存退出。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重启电脑后在 fcitx 设置即可选择中文输入法。你也可以根据自己的需求安装其他输入法，如搜狗输入法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;添加-arch-linux-cn-源&#34;&gt;添加 Arch Linux CN 源&lt;/h3&gt;
&lt;p&gt;输入如下命令编辑 pacman.conf 文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /etc/pacman.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在该文件末尾添加以下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;archlinuxcn&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着输入如下命令刷新源：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -Syy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后安装密匙：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S archlinuxcn-keyring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;若密匙安装出错，则依次输入以下命令解决：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -Syu haveged
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl start haveged
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl enable haveged
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf /etc/pacman.d/gnupg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman-key --init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman-key --populate archlinux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman-key --populate archlinuxcn
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S archlinuxcn-keyring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Arch Linux 中文社区仓库是由 Arch Linux 中文社区驱动的非官方软件仓库，包含许多官方仓库未提供的额外的软件包，以及已有软件的 git 版本等变种。一部分软件包的打包脚本来源于 AUR，但也有许多包与 AUR 不一样。
详情见 &lt;a class=&#34;link&#34; href=&#34;https://www.archlinuxcn.org/archlinux-cn-repo-and-mirror/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Arch 中文社区&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;安装-yay没错就这名字&#34;&gt;安装 yay（没错，就这名字）&lt;/h3&gt;
&lt;p&gt;yay 是目前比较好用的 &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/index.php/Arch_User_Repository_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AUR&lt;/a&gt; 助手之一，可以方便快捷地帮助你完成 AUR 软件的安装。
archlinuxcn 中已经包含 yay，可以输入如下命令直接安装 yay：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S yay
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;yay 使用上与 Pacman 大致一致。
应避免以 root 权限运行 yay，即避免&lt;code&gt;sudo yay&lt;/code&gt;这样的命令。
你也可以选择其他的 AUR 助手。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有了 yay，我们可以直接输入命令安装 AUR 的软件，比如，我们可以输入如下命令安装 Chrome。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yay -S google-chrome
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;解决-windows-加密问题&#34;&gt;解决 Windows 加密问题&lt;/h3&gt;
&lt;p&gt;如果你是双系统安装，则输入以下命令安装 dislocker 。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yay -S dislocker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后输入如下命令再次生成配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果一切正常，现在输出结果中应该含有&lt;code&gt;Windows&lt;/code&gt;字样
&lt;del&gt;如果没有的话，我也不知道怎么办了&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;禁用-reflector&#34;&gt;禁用 reflector&lt;/h3&gt;
&lt;p&gt;如果你还有印象的话，在安装过程中我们曾使用 reflector 更换替换国内镜像源。之所以使用 reflector 而不是直接修改镜像源列表不是因为这个东东多好用，而是这玩意它会未经你同意自动帮你替换镜像源列表，与其辛辛苦苦敲了半天网址结果被它自动换掉了，还不如直接就先用它替换国内镜像源。在日常使用中，我推荐禁用 reflector（默认应该是禁用状态，如果你喜欢也可以启用，不过它的国内体验非常感人&amp;hellip;）。&lt;/p&gt;
&lt;p&gt;输入如下命令禁用并停止 reflector：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl disable --now reflector.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输入如下命令启用并启动 reflector：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl enable --now reflector.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你还可以选择安装 zsh 和 Yakuake，这里不再介绍。&lt;/p&gt;
&lt;p&gt;安装教程至此可以说已经正式结束。Arch Linux 的配置当然不止于此（显卡驱动之类的还没配置呢），还有许多玩法等待你发现，但是这些内容放在安装教程中肯定不太合适。我后续应该会写一篇专门的优化教程，但是肯定不会像这篇教程一样详细了（实在太累了&amp;hellip;）。&lt;/p&gt;
&lt;h2 id=&#34;相关内容补充&#34;&gt;相关内容补充&lt;/h2&gt;
&lt;h3 id=&#34;pacman-常用命令&#34;&gt;Pacman 常用命令：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;核心命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Syu&lt;/code&gt; ：进行全面系统更新(即通俗意义的“滚”)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Sy&lt;/code&gt;： 刷新本地镜像源&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Syy&lt;/code&gt; ： 强制刷新本地镜像源&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装软件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -S packagename&lt;/code&gt; ： 安装指定软件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Sy packagename&lt;/code&gt; ： 刷新数据库后安装指定软件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Sv packagename&lt;/code&gt; ： 显示一些操作信息后安装指定软件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -U pkg.tar.xz&lt;/code&gt; ：安装本地包&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -U link.tar.xz&lt;/code&gt; ：安装远程包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除软件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -R packagename&lt;/code&gt; ：删除指定软件，保留其全部已经安装的依赖关系&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Rs packagename&lt;/code&gt; ：删除指定软件，并删除仅与该软件存在依赖关系的其他软件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Rsc packagename&lt;/code&gt; ：删除指定软件，并删除所有与该软件存在依赖关系的其他软件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Rd packagename&lt;/code&gt; ：删除指定软件，不检查依赖&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;搜索软件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Ss keyword&lt;/code&gt;：在仓库中搜索含关键字的软件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Qs keyword&lt;/code&gt;：在已安装软件中搜索含关键词的软件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Qi packagename&lt;/code&gt;：搜索指定软件的详细信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Ql packagename&lt;/code&gt;：列出指定软件的文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Sw packagename&lt;/code&gt;：只下载指定软件而不安装&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Sc&lt;/code&gt; ：清理未安装的软件包&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Scc&lt;/code&gt; ：清理所有的缓存文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;arch-相关链接&#34;&gt;Arch 相关链接&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Arch Wiki：&lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/index.php/Main_page_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Link&lt;/a&gt; （推荐所有用户没事就多看看 Arch Wiki，遇到问题先看看 Arch Wiki 有没有解决方案。）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Arch 官方软件仓库：&lt;a class=&#34;link&#34; href=&#34;https://www.archlinux.org/packages/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Arch Linux CN 软件仓库：&lt;a class=&#34;link&#34; href=&#34;https://build.archlinuxcn.org/packages/#/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AUR：&lt;a class=&#34;link&#34; href=&#34;https://aur.archlinux.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>记 GNOME 的初体验</title>
        <link>https://blog.linioi.com/posts/the-first-gnome-try/</link>
        <pubDate>Tue, 23 Feb 2021 01:26:46 +0800</pubDate>
        
        <guid>https://blog.linioi.com/posts/the-first-gnome-try/</guid>
        <description>&lt;p&gt;2022 年 1 月 18 日注：
经 Arch Linux CN 社区中一些大佬指正，现对该博文进行补充说明，以免误导 Linux 萌新。&lt;del&gt;没想到我的博客居然真的有人看&lt;/del&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这篇博客本质上其实也只是一篇&lt;strong&gt;个人吐槽性博客&lt;/strong&gt;，而并非严谨的技术性文档。我很高兴会有人愿意花时间看我的这样一篇无聊的博客，&lt;strong&gt;但请不要将这篇博客所呈现的内容或其中的观点作为你评判事物的参考&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;限于我当时写这篇博客的技术水平及认知水平，&lt;strong&gt;这篇博客许多观点和表述上其实存在很多问题&lt;/strong&gt;。我对这些错误大体上持较为宽容的态度，毕竟使用 Linux 的过程中，我始终是一个还在路上的求学者。在自身认知还不完善的情况下，错误其实在所难免。不过我觉得存在错误并不可耻，知错不改、止步不前才可怕。曾经的我写下的幼稚言论固然漏洞百出，但是当作难得珍贵的黑历史又何尝不是一种乐趣呢？这又何尝不是记录性博客的意义所在呢？（&lt;del&gt;我这样说会不会被打啊&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;如果你是萌新纠结 Linux 桌面环境的选择，你应该亲自一个一个尝试而不是在网上搜索相关文章或视频。他人的意见固然值得参考，但是适合自己的才是最好的。&lt;/li&gt;
&lt;li&gt;文章中存在一些对 GNOME 的负面评论，但并不代表我否认 GNOME 是现 Linux 桌面环境大家庭中极为出色的一个。事实上截至目前，我使用的桌面环境仍是 GNOME，这同样代表了我对它的认可。博客中大篇幅描述了当时的我使用 GNOME 遇到的 bug，但是在后续处理中已经证明这些只不过是我&lt;strong&gt;个人的配置问题&lt;/strong&gt;。桌面环境的稳定性其实很大程度上取决于用户水平，因此请理性看待当时的我提出的 bug。&lt;/li&gt;
&lt;li&gt;最后，如果聪明的你在阅读这篇博客的时候发现了博客中存在的问题，欢迎在评论区指出，说不定还能开展一场捉虫大赛呢对吧？（雾）&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;记-gnome-的初体验&#34;&gt;记 GNOME 的初体验&lt;/h1&gt;
&lt;p&gt;长期以来，我使用 KDE 而非 GNOME。劝退我的不只网上关于 GNOME 的负面言论诸如“GNOME 资源占用大”、“扩展 bug 多”、“开发线混乱，整个项目四分五裂”等，还有 Linus 在 Google＋ 中描述 GNOME “无可容忍的凌乱”。&lt;/p&gt;
&lt;p&gt;反观 KDE 却是出奇的一致好评，比如“最小的等离子桌面”、“高度可自定义”、“界面统一，新手易使用”等。&lt;/p&gt;
&lt;p&gt;因此，我几乎没有任何纠结地选择了 KDE（重要原因还是当时电脑配置太低，所以后面又换 Xfce 了&amp;hellip;)&lt;/p&gt;
&lt;h2 id=&#34;无奈地一次-gnome-尝试&#34;&gt;无奈地一次 GNOME 尝试&lt;/h2&gt;
&lt;p&gt;是的，是“无奈的一次尝试”。&lt;/p&gt;
&lt;p&gt;起因是 KDE 出现“合盖睡死”、“合盖再开盖花屏”等问题。&lt;/p&gt;
&lt;p&gt;强迫症的我当然不能忍受开机就铺面而来的撕裂感。对于不喜欢经常关机的我来说，如果仅 睡眠/挂起 意味着每次开机一片刺眼的条纹，那么继续使用 KDE 基本上可以帮助我戒掉电脑了（强迫症的挣扎）。&lt;/p&gt;
&lt;p&gt;长时间地查教程、社区提问无果后，我逐渐放弃了挣扎，并在纠结很久之后选择装了一个 Windows 10（至少这台电脑的 Windows 支持非常完善，Windows 10 不会开盖花屏）。&lt;/p&gt;
&lt;p&gt;这件事让我很沮丧，第一次因为自己能力不够而被迫选择自己所抗拒的 Windows 到底是一件让人开心不起来的事情。我将我的想法这样传达给了我的一个朋友，那个朋友这样反问，“为什么不试试 GNOME 呢？”&lt;/p&gt;
&lt;p&gt;我当然下意识拒绝了，理由便是开篇那些网上的负面言论。但是拒绝后的那个下午，我反复想起”使用 GNOME“的提议。&lt;/p&gt;
&lt;p&gt;既然别无选择，为什么不给 GNOME 一个机会呢？（&lt;del&gt;态度好像不太对&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;意料之外gnome-给我的惊喜&#34;&gt;意料之外：GNOME 给我的惊喜&lt;/h2&gt;
&lt;p&gt;经过一番熟练的操作（别问我我为什么这么熟练），我完成了 Arch Linux + GNOME 的安装。&lt;/p&gt;
&lt;p&gt;重启第一眼看到的 GDM 就给了我一个惊喜——精致的 MD 设计，简约大方，一瞬间让我不敢想起 SDDM 那土掉渣的开机界面（我当然知道 SDDM 主题，但是 SDDM 主题很少有能做到 GDM 这般简约与美观并重）。&lt;/p&gt;
&lt;p&gt;在几分钟的试体验中，GNOME 精致的 MD 设计接近颠覆了我对 Linux 桌面一贯的认知。KDE 高自定义当然很好，但是不如 GNOME 这般简直为我的简约向审美量身定制。&lt;/p&gt;
&lt;p&gt;（不要和我说 GNOME 的默认应用图标，那玩意差点弄瞎了我的眼睛）&lt;/p&gt;
&lt;p&gt;比如说大家最熟悉的 VS Code,图标是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/the-first-gnome-try/vscode-icon.png&#34;
	width=&#34;476&#34;
	height=&#34;254&#34;
	srcset=&#34;https://blog.linioi.com/posts/the-first-gnome-try/vscode-icon_hu63a188e671494b1b972d7d63125d9417_4873_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/the-first-gnome-try/vscode-icon_hu63a188e671494b1b972d7d63125d9417_4873_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;你敢相信这个是 VS Code？&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;187&#34;
		data-flex-basis=&#34;449px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;大概感觉是，看完这默认的图标设计，我感觉我挺有当设计师的天赋。&lt;/p&gt;
&lt;p&gt;在确定 GNOME 合盖不会花屏之后，我可以肯定，GNOME 将会是我未来很长一段时间的 Linux 桌面环境解决方案。&lt;/p&gt;
&lt;h2 id=&#34;与-gnome-bug-的搏斗&#34;&gt;与 GNOME bug 的搏斗&lt;/h2&gt;
&lt;h3 id=&#34;第一回合下马威gdm-的罢工&#34;&gt;第一回合：下马威，GDM 的罢工&lt;/h3&gt;
&lt;p&gt;如上文所说，我不喜欢经常关机，所以直到当我装 VMware 需要重启的时候，我才发现原来这 GDM 是一次性产品，就第一次开机能一睹它尊容（&lt;/p&gt;
&lt;p&gt;具体 bug 表现为内核启动后，电脑一直卡在光标闪动界面而没出现 GDM（显示管理器）。刚开始我寻思可能是 VMware 有点傲娇，重启开机系统的工作量有点大（自欺欺人ing&amp;hellip;)，所以开机稍微慢了了一点。加上这光标一直在闪，而我暂时也不急着用电脑，所以姑且耐心地等了下来，直到半个小时后我与电脑漆黑屏幕里闪动的光标从相顾无言到怒目而向。&lt;/p&gt;
&lt;p&gt;好吧，大概是挂了。没想到自己 Arch Linux 第一次嗝屁居然不是因为滚挂了，而是新系统的第一次重启&amp;hellip;&lt;/p&gt;
&lt;p&gt;我仔细进行了一番思考，简单罗列一下可能的原因，最后得出了结论：可能&lt;del&gt;又&lt;/del&gt;要重装了。&lt;/p&gt;
&lt;p&gt;重装就重装吧，在第二次安装过程中，我根据我罗列的原因略微修改了一下我一贯的安装过程（其实就是简化一些安装步骤），并把文件系统从 Btrfs 改为了 ext4（事后我追悔莫及&amp;hellip;)&lt;/p&gt;
&lt;p&gt;在一番&lt;del&gt;熟练&lt;/del&gt;的操作下，我两三下完成了 Arch Linux 的安装，接着满怀激动地进入了桌面，然后满怀期待的点击了重启，最后不出所料地又卡在了开机界面。&lt;/p&gt;
&lt;p&gt;我已经准备好加 tag 了，比如 #GNOME无法开机 #GDM无法启动 #ArchLinux卡开机光标&lt;/p&gt;
&lt;p&gt;在此之前，我先进 tty 简单确认了一下日志。嗯，好像是 GNOME 挂了。&lt;/p&gt;
&lt;p&gt;嗯？啥？GNOME 挂了？&lt;/p&gt;
&lt;p&gt;我认识到了这不是我能独立解决的问题，于是我光荣地在 Arch Linux CN 社区再次开展了我的 &lt;del&gt;小白灵魂三问&lt;/del&gt; 真挚且虚心的提问。&lt;/p&gt;
&lt;p&gt;经过一番大家都摸不到头脑的瞎折腾之后，我终于得到一句有用（表意明确）的话：“我们也不知道什么情况，你先按照你的想法试试。”（我：？？？）&lt;/p&gt;
&lt;p&gt;于是在遍历 Arch Wiki 之后，我发现 Arch Wiki GDM 的 &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/index.php/GDM#GDM_shows_black_screen_with_blinking_white_cursor&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Troubleshooting&lt;/a&gt; 居然有和我情况一模一样的问题解决方案。&lt;/p&gt;
&lt;p&gt;Arch Wiki 的描述及解决方案如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GDM shows black screen with blinking white cursor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After booting, GDM may present you with a black screen with a blinking white cursor in the top left. This may be caused by GDM starting before graphics drivers are fully initialized. One possible workaround is to &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/index.php/Kernel_mode_setting#Early_KMS_start&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;start KMS early&lt;/a&gt;. Another possible workaround is to &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/index.php/Systemd#Editing_provided_units&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;edit the systemd service&lt;/a&gt; and either set its type to &amp;ldquo;idle&amp;rdquo; or add a small delay:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Service&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;idle
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Service&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ExecStartPre&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/bin/sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If a longer delay is required, increase the delay time.&lt;/p&gt;
&lt;p&gt;看完 Wiki 的我猛拍大腿。对啊，提前启动 KMS，我咋没想到呢？？&lt;/p&gt;
&lt;p&gt;于是继续顺着超链接看了下去。&lt;/p&gt;
&lt;p&gt;嗯，在&lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt;添加模块（MODULES），我是 AMD 核显所以应该添加&lt;code&gt;amdgpu&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;所以应该是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MODULES&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;amdgpu&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#又不是旧架构，我为啥要加 radeon？&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;修改完后保存退出重启，再次开机的时候，我终于看见了我久违的 GDM。&lt;/p&gt;
&lt;p&gt;确保这次开机不是偶然，我特意再重启了一遍，然后&amp;hellip;&amp;hellip;又卡在那个光标了。&lt;/p&gt;
&lt;p&gt;我凭借自己强大的心理素质忍住了想哭的冲动，平复心情后把 Arch Wiki 给出的所有方案操作了一遍，然后基本确定，我上一次开机真的只是偶然事件（&lt;/p&gt;
&lt;p&gt;抱着破罐子破摔的态度，我开始尝试我能想到的玄学方法，比如安装 linux-zen 内核（据说专为 Arch Linux 用户定制，对笔记本有玄学优化的神奇内核）。然后，就真开机了&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;是的，这次不是偶然事件了。截至我先这篇博文，我亲爱的 GDM 都 works very well。感谢 linux-zen 鼎力相助以及 GDM 的手下留情，不然我就真的可能把 GDM 换 SDDM 或 LightDM 试试了（雾）。&lt;/p&gt;
&lt;h3 id=&#34;第二回合下酒菜薛定谔的桌面动画&#34;&gt;第二回合：下酒菜，薛定谔的桌面动画&lt;/h3&gt;
&lt;p&gt;考虑到如果要将这次较量完整的记录下来，5000 字可能不够写大纲。因此，我只记录我印象最深刻的 &lt;em&gt;显示应用程序动画&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;起因是每次点击 Dock 栏的抽屉（姑且先这样叫吧），动画都有一种莫名的卡顿感。我是一个很少在意动画的人，但动画明显的不和谐感引发了我的疑惑。仔细想了想，我感觉我电脑配置算不上高但怎么也不至于带不动一个桌面的动画。于是我特意仔细观察了一下点击 Dock 栏抽屉的动画，然后发现了问题所在。&lt;/p&gt;
&lt;p&gt;我觉得我的语言很难向别人表述清楚问题所在，但是考虑到我博客好像只有自己看，那就按照我的感觉描述，自己能懂就好了（bushi&lt;/p&gt;
&lt;p&gt;简单来说，我只&lt;strong&gt;点击了抽屉一次&lt;/strong&gt;，而 Dock 栏抽屉的&lt;strong&gt;动画显示了两次&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;具体表现为，桌面在我点击后先显示了应用列表，然后再显示了一个扩散开来的 Dock 栏抽屉点击动画。我猜这可能是扩展动画和桌面自带动画冲突的缘故。不出所料，我在 &lt;em&gt;Dash To Dock&lt;/em&gt; 扩展中找到了 &lt;em&gt;动画方式&lt;/em&gt; -&lt;em&gt;显示应用程序&lt;/em&gt;  这个选项。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223004213775.png&#34;
	width=&#34;1052&#34;
	height=&#34;212&#34;
	srcset=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223004213775_hu48c65c8667988f899a810e7976ef07a4_48978_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/the-first-gnome-try/image-20210223004213775_hu48c65c8667988f899a810e7976ef07a4_48978_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Dash To Dock-启动项&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;496&#34;
		data-flex-basis=&#34;1190px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;关闭该选项后，动画的不和谐感消失。&lt;/p&gt;
&lt;p&gt;当然，对于内心追求完美的我来说，一切本应还没有结束。考虑到 GNOME 扩展都是为 GNOME 定制的，扩展作者怎么可能加这种明显有问题的功能呢？最可能的情况是，这个功能本应该在某种情况下正常工作，但是我当前环境不满足扩展正常工作所需条件，因此才会出现这个 bug。&lt;/p&gt;
&lt;p&gt;我当然也更喜欢扩展提供的动画，但是在网上找很久都没有找到相关解决方案后，我还是决定放弃该动画，毕竟使用 Linux 不应把过多的时间放在美化上（&lt;del&gt;才不是为自己找借口&lt;/del&gt;）。&lt;/p&gt;
&lt;h3 id=&#34;第三回合压轴戏无尽-bug&#34;&gt;第三回合：压轴戏，无尽 bug&lt;/h3&gt;
&lt;p&gt;无尽 bug，故名思义，即为我对目前 GNOME 使用体验的描述。如果要形象一点表述，我只能说，我感觉我被虫子包围了。&lt;/p&gt;
&lt;p&gt;是的，GNOME 日常使用如果加上扩展的话 bug 太多了&amp;hellip;每天体验不同的 bug或者也是一种乐趣吧？&lt;/p&gt;
&lt;h2 id=&#34;gnome-中我的扩展与美化&#34;&gt;GNOME 中我的扩展与美化&lt;/h2&gt;
&lt;p&gt;该节仅为记录备份，请勿照搬安装我截图中的扩展。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010034467.png&#34;
	width=&#34;2560&#34;
	height=&#34;1532&#34;
	srcset=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010034467_hud149367c0603b0104a669a2723a50bd1_249902_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010034467_hud149367c0603b0104a669a2723a50bd1_249902_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我的扩展1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010209578.png&#34;
	width=&#34;2560&#34;
	height=&#34;1532&#34;
	srcset=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010209578_hu21c83ea227ec97f09608958af6289be8_248251_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010209578_hu21c83ea227ec97f09608958af6289be8_248251_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我的扩展2&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010538858.png&#34;
	width=&#34;2560&#34;
	height=&#34;1532&#34;
	srcset=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010538858_hu002e63c3e490d5694ac95717a8841052_252849_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010538858_hu002e63c3e490d5694ac95717a8841052_252849_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我的扩展3&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010623143.png&#34;
	width=&#34;2554&#34;
	height=&#34;340&#34;
	srcset=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010623143_hu787c2d144d620e57790c62ea3c9b68b5_44945_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010623143_hu787c2d144d620e57790c62ea3c9b68b5_44945_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我的扩展4&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;751&#34;
		data-flex-basis=&#34;1802px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;各人审美不同，请勿照用我使用的主题和字体。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223005830704.png&#34;
	width=&#34;2560&#34;
	height=&#34;1532&#34;
	srcset=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223005830704_hu5804e1f92dd71ca21875cab44b958563_132994_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/the-first-gnome-try/image-20210223005830704_hu5804e1f92dd71ca21875cab44b958563_132994_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我的主题搭配&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223005924530.png&#34;
	width=&#34;2560&#34;
	height=&#34;1532&#34;
	srcset=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223005924530_hu0d625b59c24d2eee8ca6e65a6645ec83_136655_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/the-first-gnome-try/image-20210223005924530_hu0d625b59c24d2eee8ca6e65a6645ec83_136655_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我的字体搭配&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;最后的桌面效果如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010757838.png&#34;
	width=&#34;2560&#34;
	height=&#34;1600&#34;
	srcset=&#34;https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010757838_hu353dc714355237e4820a76cb260a19db_5430814_480x0_resize_box_3.png 480w, https://blog.linioi.com/posts/the-first-gnome-try/image-20210223010757838_hu353dc714355237e4820a76cb260a19db_5430814_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我的桌面&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;有人评价说我的桌面像 Mac。说实话，装扮桌面的时候没有刻意模仿 Mac，完全是自己觉得怎么舒服怎么来。&lt;/p&gt;
&lt;p&gt;直到现在，我对我的图标包还是不算满意，但是换了几套还是找不到称心如意的，索性就将就着用吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dock 放底栏是非高效率的做法！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dock 放底栏是非高效率的做法！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dock 放底栏是非高效率的做法！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;正确的高效率布局应该是 Dock 放侧栏（即 GNOME 默认设置）。&lt;/p&gt;
&lt;p&gt;那我为啥把 Dock 放底栏呢？
&lt;del&gt;因为好看啊～&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用小结&#34;&gt;使用小结&lt;/h2&gt;
&lt;p&gt;根据 Typora 的统计结果，这也是一篇 3000 字的长文了。粗略估计一下，我写这篇博文也花了三个多小时。实际上的写作体验由最开始的不知道写啥到后面的停不下来，还是非常舒畅的。我想这也是我这几天使用 GNOME 有很多有意思的体验，也有很多想法想分享给别人（虽然好像写了 3000 字，但实际上啥也没写）。&lt;/p&gt;
&lt;p&gt;其实一开始写这篇博文是想分享一下 GNOME 的效率工具&amp;amp;作业模式，但转念觉得教程性文章未免太没意思了一点，而目前整个博客几乎都是教程性文章，几乎看不出一个博客应有的样子，所以索性水了一篇这样的记录性博文。&lt;/p&gt;
&lt;p&gt;总而言之，希望将来的自己重新审视自己曾经写的博文的时候，能喜欢这篇文章。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Arch Linux 服务器安装 LNMP</title>
        <link>https://blog.linioi.com/posts/5/</link>
        <pubDate>Sat, 30 May 2020 20:31:49 +0000</pubDate>
        
        <guid>https://blog.linioi.com/posts/5/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;没有其他发行版的一键脚本/运维面板
Arch Linux 用它的方式体现着它的超凡脱俗
&lt;del&gt;其实就是用的人太少，没人写脚本&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;对-arch-linux-进行一次全面更新&#34;&gt;对 Arch Linux 进行一次全面更新&lt;/h2&gt;
&lt;p&gt;&lt;del&gt;话说，这不是每天开机第一件事吗&lt;/del&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -Syu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装-nginx&#34;&gt;安装 Nginx&lt;/h2&gt;
&lt;p&gt;Arch Linux 软件库中有两个版本的 Nginx，分别是
&lt;a class=&#34;link&#34; href=&#34;https://www.archlinux.org/packages/extra/x86_64/nginx/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;nginx&lt;/a&gt; 和 &lt;a class=&#34;link&#34; href=&#34;https://www.archlinux.org/packages/community/x86_64/nginx-mainline/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;nginx-mainline&lt;/a&gt;，与 Nginx 官方的两个版本对应。nginx 理论上更加稳定，但版本比较旧， 而 nginx-mainline 是 Nginx 最新的版本。
但这并不表示 nginx-mainline = 不稳定。实际上 nginx.org 官网说明，如果没有非常必要的原因，则推荐使用 nginx mainline。
输入如下命令安装旧版本 Nginx。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装 nginx-mainline。（本教程安装的是 mainline）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S nginx-mainline
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以上两条命令默认会自动安装 geoip 和 geoip-database 两个软件包。安装完成后，使用 systemctl 来查看其状态。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;● nginx.service - A high performance web server and a reverse proxy server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Loaded: loaded &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Active: active &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;running&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; since Tue 2016-04-12 13:10:57 CST; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; day 7h ago
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Main PID: &lt;span style=&#34;color:#ae81ff&#34;&gt;2010&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;nginx&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Tasks: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;limit: 512&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     CGroup: /system.slice/nginx.service
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             ├─2010 nginx: master process /usr/bin/nginx -g pid /run/nginx.pid; daemon on; master_process on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             └─2011 nginx: worker process
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果 Nginx 未运行，则输入以下的命令启动它。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl start nginx &lt;span style=&#34;color:#75715e&#34;&gt;#启动 Nginx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl enable nginx &lt;span style=&#34;color:#75715e&#34;&gt;#设置 Nginx 开机自启动&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输入如下命令可查看 Nginx 的版本号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;user@arch ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ nginx -v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx version: nginx/1.9.14
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在浏览器中输入 Arch Linux 服务器的 IP 地址，如果看见如下文字，则说明 Nginx 在正常运行。
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/RimuruW/PicGoBed/blog/images/nginx.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Nginx 欢迎界面&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;如果你不知道服务器公网 IP，可以输入这条命令查看。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl http://icanhazip.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你是在本地主机安装，那么直接在浏览器地址栏输入 127.0.0.1 即可。&lt;/p&gt;
&lt;h2 id=&#34;安装-mariadb&#34;&gt;安装 MariaDB&lt;/h2&gt;
&lt;p&gt;2013 年开始，Arch Linux 将 MariaDB 作为默认的 SQL 数据库软件，Oracle 的 MySQL 则被丢进 AUR（（（&lt;/p&gt;
&lt;p&gt;输入如下命令安装 MariaDB&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S mariadb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在启动 MariaDB 服务之前，需要使用用 &lt;code&gt;mysql_install_db&lt;/code&gt;命令初始化 MariaDB 的数据目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mysql_install_db --user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mysql --basedir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr --datadir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/var/lib/mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动 MariaDB 服务。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl start mysqld
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看 MariaDB 状态。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status mysqld
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;● mysqld.service - MariaDB database server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Loaded: loaded &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;/usr/lib/systemd/system/mysqld.service; disabled; vendor preset: disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Active: active &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;running&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; since Wed 2016-04-13 21:09:45 CST; 5s ago
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Process: &lt;span style=&#34;color:#ae81ff&#34;&gt;8373&lt;/span&gt; ExecStartPost&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/bin/mysqld-post &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;code&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;exited, status&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0/SUCCESS&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Main PID: &lt;span style=&#34;color:#ae81ff&#34;&gt;8372&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;mysqld&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Tasks: &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;limit: 512&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   CGroup: /system.slice/mysqld.service
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           └─8372 /usr/bin/mysqld --pid-file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/run/mysqld/mysqld.pid
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;设置 MariaDB 开机自启动。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemclt enable mysqld
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行安全安装脚本。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mysql_secure_installation
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它会询问你 MariaDB 的 root 密码，因为我们没有设置密码，所以按 Enter 键，再设置一个 root 密码。然后选择删除 test 数据库，anonymous 用户以及禁用 root 用户远程登录。&lt;/p&gt;
&lt;p&gt;查看 MariaDB 的版本。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;user@arch ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ mysql --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql  Ver 15.1 Distrib 10.1.13-MariaDB, &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; Linux &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x86_64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; using readline 5.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;默认的配置文件位置为 &lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;第 4 步：安装 PHP7
Arch Linux 软件库的 PHP 一般都是最新版本（目前是 7.4 版本）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S php-fpm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装后，修改 Nginx 配置文件以使 Nginx 使用 php-fpm 来运行 PHP。编辑/etc/nginx/nginx.conf 文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /etc/nginx/nginx.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;找到 location ~ .php$这部分的配置，将这部分配置修改成如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;location&lt;/span&gt; ~ &lt;span style=&#34;color:#e6db74&#34;&gt;\.php$&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;root&lt;/span&gt;           &lt;span style=&#34;color:#e6db74&#34;&gt;/usr/share/nginx/html&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;fastcgi_pass&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;unix:/run/php-fpm/php-fpm.sock&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;fastcgi_index&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;index.php&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;fastcgi_param&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;SCRIPT_FILENAME&lt;/span&gt;  $document_root$fastcgi_script_name;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;include&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;fastcgi_params&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;保存文件。然后启动 php-fpm，并设置开机自启动。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl start php-fpm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl enable php-fpm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第 5 步：测试 PHP
在网站根目录创建一个 test.php 文件。默认的网站根目录是/usr/share/nginx/html。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /usr/share/nginx/html/test.php
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在文件中添加如下 PHP 代码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;phpinfo&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;保存文件。重新加载 Nginx。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl reload nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在浏览器地址栏输入 &lt;code&gt;http://你服务器或本地主机IP/test.php&lt;/code&gt;。将 server-ip 替换成 Arch Linux 服务器或本地主机 IP。
此时，浏览器会显示有关 PHP 到底信息，这意味着你已修改成功。&lt;/p&gt;
&lt;p&gt;test.php 文件只是用来测试 PHP 的，为了不让他人看见服务器的信息，测试之后要将它删除。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo rm /usr/share/nginx/html/test.php
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启用 PHP 扩展
编辑 /etc/php/php.ini 配置文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /etc/php/php.ini
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;找到如下两行文字，去掉前面的#符号以启用 mysqli 和 pdo_mysql。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;extension&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mysqli&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;so&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;extension&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pdo_mysql&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;so&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;mysqli.do&lt;/code&gt; 用来建立数据库连接。&lt;code&gt;pdo_mysql.so&lt;/code&gt; 是 drupal 内容管理系统所必要的 PHP 扩展。如果需要在 WordPress, Drupal 内容管理系统中剪裁、旋转图片，那么需要启用 imagemagick 这个扩展。&lt;/p&gt;
&lt;p&gt;安装教程到此结束。&lt;/p&gt;
&lt;p&gt;转载自&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.linuxbabe.com/linux-server/install-lemp-nginx-mariadb-php7-arch-linux-server&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Install Nginx, MariaDB, PHP7 (LEMP) on Arch Linux Server in 2019&lt;/a&gt;
转载略有修改&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
